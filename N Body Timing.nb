(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    247767,       4936]
NotebookOptionsPosition[    243263,       4846]
NotebookOutlinePosition[    243752,       4864]
CellTagsIndexPosition[    243709,       4861]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["N Body Parallel", "Title",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{{3.8217294718661222`*^9, 3.821729502043838*^9}, 
   3.8217295683553457`*^9, 3.821732221863006*^9, {3.821811203295624*^9, 
   3.8218112036548367`*^9}, {3.822041768762134*^9, 3.822041781290854*^9}, {
   3.822048009752109*^9, 3.8220480569607773`*^9}, {3.822504877727007*^9, 
   3.8225048874039307`*^9}, {3.822565447028533*^9, 3.822565457908236*^9}, {
   3.822822107930128*^9, 3.822822113128089*^9}, {3.823176459993638*^9, 
   3.823176470345335*^9}, {3.823359338529508*^9, 3.823359361520629*^9}, {
   3.823422938182802*^9, 3.823422938584877*^9}, {3.823431880221382*^9, 
   3.823431897644202*^9}, {3.82343570279051*^9, 3.823435714197551*^9}, {
   3.8279532410864677`*^9, 3.8279532445579853`*^9}, {3.82795429722185*^9, 
   3.827954302845343*^9}, {3.827956183129569*^9, 3.8279561871771517`*^9}, 
   3.8510088216927958`*^9, {3.851065387457584*^9, 3.8510653950417137`*^9}, {
   3.8510682768154383`*^9, 3.851068280871207*^9}, {3.8510997628523493`*^9, 
   3.8510997737509108`*^9}, {3.851112556690555*^9, 3.851112614497939*^9}, {
   3.861873084561179*^9, 3.861873110928751*^9}, 3.861873468099904*^9, {
   3.862044418961834*^9, 3.862044450225502*^9}, {3.886941366956658*^9, 
   3.886941371090116*^9}, {3.891600973751156*^9, 3.8916009907854643`*^9}},
 TextAlignment->Center,ExpressionUUID->"568d6fb6-f317-4779-b36b-ba7a4ea9dbb8"],

Cell["\<\
Geoff Cope
University of Utah
\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\|01040f\|01042d\|01044c\|010432\|010442\|010432\
\|010449\|010445\|01042e\|01043b\|010428 \|010432\|010442 \|01040f\|01042d\
\|01043b\|01042b
May 18, 2022\
\>", "Author",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{{3.821729507652328*^9, 3.821729529657844*^9}, 
   3.8220480097522783`*^9, {3.822048070235491*^9, 3.822048084689715*^9}, {
   3.8225654346519403`*^9, 3.8225654361641483`*^9}, {3.8231764728567343`*^9, 
   3.823176482313031*^9}, {3.8233640113399878`*^9, 3.823364023347041*^9}, {
   3.8234229506702557`*^9, 3.823422956381791*^9}, {3.827953252419902*^9, 
   3.827953254868108*^9}, {3.851065213363542*^9, 3.8510652255731983`*^9}, {
   3.8510652620952*^9, 3.851065307413348*^9}, {3.85109882342251*^9, 
   3.851098834342609*^9}, 3.851112556690649*^9, 3.861873468099978*^9, {
   3.861874316220215*^9, 3.861874319756319*^9}},
 TextAlignment->Center,ExpressionUUID->"a13991f0-0212-4b61-ba2c-cf35fba3e075"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Hyperlink To Documentation for N Body", "Section",
 CellChangeTimes->{{3.891601023221756*^9, 
  3.891601038527186*^9}},ExpressionUUID->"1fc0ade7-4f3a-41d5-83b1-\
c094c734a835"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Hyperlink", "[", 
  RowBox[{
  "\"\<NBodySimulation\>\"", ",", "\[IndentingNewLine]", 
   "\"\<https://reference.wolfram.com/language/ref/NBodySimulation.html\>\""}]\
, "]"}]], "Input",
 CellChangeTimes->{{3.8916010051055*^9, 3.891601020119481*^9}},
 CellLabel->"In[23]:=",ExpressionUUID->"d5f2d9c7-c3ef-4a7c-8df1-95e0a2fa4ca5"],

Cell[BoxData[
 TemplateBox[{
  "\"NBodySimulation\"", 
   "https://reference.wolfram.com/language/ref/NBodySimulation.html"},
  "HyperlinkURL"]], "Output",
 CellChangeTimes->{3.891601021915565*^9},
 CellLabel->"Out[23]=",ExpressionUUID->"9e12a229-9fe7-48fb-a208-b91541332069"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Launch Kernels", "Section",
 CellChangeTimes->{{3.891601093503098*^9, 
  3.891601102118992*^9}},ExpressionUUID->"0683fa81-01c5-485a-a0de-\
db0eb9f7ffe9"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"CloseKernels", "[", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"LaunchKernels", "[", "]"}]}], "Input",
 CellChangeTimes->{{3.891600218559525*^9, 3.891600220742049*^9}, {
   3.891600889120886*^9, 3.891600894343864*^9}, 
   3.891601091943222*^9},ExpressionUUID->"f88d26e6-15a4-4c37-9358-\
35cfab38de19"]
}, Closed]],

Cell[CellGroupData[{

Cell["N Body Three Dimensions From Documentation", "Section",
 CellChangeTimes->{{3.891601250851405*^9, 
  3.891601272852066*^9}},ExpressionUUID->"a981279d-dea9-49af-b242-\
cc8c301309db"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"data", "=", 
  RowBox[{"NBodySimulation", "[", 
   RowBox[{"\"\<InverseSquare\>\"", ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"<|", 
       RowBox[{
        RowBox[{"\"\<Mass\>\"", "->", "1"}], ",", 
        RowBox[{"\"\<Position\>\"", "->", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], ",", 
        RowBox[{"\"\<Velocity\>\"", "->", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0", ",", "0"}], "}"}]}]}], "|>"}], ",", 
      RowBox[{"<|", 
       RowBox[{
        RowBox[{"\"\<Mass\>\"", "->", "2"}], ",", 
        RowBox[{"\"\<Position\>\"", "->", 
         RowBox[{"{", 
          RowBox[{"1", ",", "1", ",", "1"}], "}"}]}], ",", 
        RowBox[{"\"\<Velocity\>\"", "->", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0", ",", "0"}], "}"}]}]}], "|>"}], ",", 
      RowBox[{"<|", 
       RowBox[{
        RowBox[{"\"\<Mass\>\"", "->", "3"}], ",", 
        RowBox[{"\"\<Position\>\"", "->", 
         RowBox[{"{", 
          RowBox[{"1", ",", "1", ",", "0"}], "}"}]}], ",", 
        RowBox[{"\"\<Velocity\>\"", "->", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0", ",", "0"}], "}"}]}]}], "|>"}], ",", 
      RowBox[{"<|", 
       RowBox[{
        RowBox[{"\"\<Mass\>\"", "->", "4"}], ",", 
        RowBox[{"\"\<Position\>\"", "->", 
         RowBox[{"{", 
          RowBox[{"0", ",", "1", ",", "1"}], "}"}]}], ",", 
        RowBox[{"\"\<Velocity\>\"", "->", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0", ",", "0"}], "}"}]}]}], "|>"}]}], "}"}], ",", 
    "1"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.891601146925129*^9, 3.891601146928844*^9}},
 CellLabel->"In[24]:=",ExpressionUUID->"d8f42c9a-3f77-4d87-a4bf-b25675847eff"],

Cell[BoxData[
 TagBox[
  TemplateBox[{
    RowBox[{
      StyleBox[
       TagBox["NBodySimulationData", "SummaryHead"], 
       "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{
       Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
       TemplateBox[{
         TemplateBox[{
           PaneSelectorBox[{False -> GridBox[{{
                 GraphicsBox[{
                   PointSize[0.05], 
                   
                   PointBox[{{0.876608492574193, 0.5219642502018771}, {
                    0.08622342695413243, 0.3779129543048858}, {
                    0.011644572969246703`, 0.9272661633421619}, {
                    0.5437567669510681, 0.47933167047242464`}, {
                    0.24534922778070478`, 0.7598960015615879}}]}, {
                  DisplayFunction -> Identity, AspectRatio -> 1, 
                   Axes -> {False, False}, AxesLabel -> {None, None}, 
                   AxesOrigin -> {0, 0.02}, Background -> GrayLevel[0.93], 
                   BaseStyle -> {FontFamily -> "Arial"}, DisplayFunction :> 
                   Identity, Frame -> {{True, True}, {True, True}}, 
                   FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                   Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.7]], 
                   FrameTicks -> {{None, None}, {None, None}}, 
                   GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], LabelStyle -> {FontFamily -> "Arial"}, 
                   Method -> {
                    "ScalingFunctions" -> None, "AxesInFront" -> True}, 
                   PlotRange -> {All, All}, PlotRangeClipping -> True, 
                   PlotRangePadding -> {{0, 0}, {0, 0.1}}, 
                   Ticks -> {Automatic, Automatic}}], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"Number of Bodies: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["4", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Simulation Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["1.`", "SummaryItem"]}]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}], True -> GridBox[{{
                 GraphicsBox[{
                   PointSize[0.05], 
                   
                   PointBox[{{0.876608492574193, 0.5219642502018771}, {
                    0.08622342695413243, 0.3779129543048858}, {
                    0.011644572969246703`, 0.9272661633421619}, {
                    0.5437567669510681, 0.47933167047242464`}, {
                    0.24534922778070478`, 0.7598960015615879}}]}, {
                  DisplayFunction -> Identity, AspectRatio -> 1, 
                   Axes -> {False, False}, AxesLabel -> {None, None}, 
                   AxesOrigin -> {0, 0.02}, Background -> GrayLevel[0.93], 
                   BaseStyle -> {FontFamily -> "Arial"}, DisplayFunction :> 
                   Identity, Frame -> {{True, True}, {True, True}}, 
                   FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                   Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.7]], 
                   FrameTicks -> {{None, None}, {None, None}}, 
                   GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], LabelStyle -> {FontFamily -> "Arial"}, 
                   Method -> {
                    "ScalingFunctions" -> None, "AxesInFront" -> True}, 
                   PlotRange -> {All, All}, PlotRangeClipping -> True, 
                   PlotRangePadding -> {{0, 0}, {0, 0.1}}, 
                   Ticks -> {Automatic, Automatic}}], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"Number of Bodies: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["4", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Simulation Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["1.`", "SummaryItem"]}]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}]}, 
            Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
          "SummaryPanel"], 
         ButtonBox[
          DynamicBox[
           ToBoxes[
            If[
             
             Or[$VersionNumber < 11.2, CurrentValue["RunningEvaluator"] =!= 
              "Local"], 
             Style["This object cannot be used as input.", "SummaryEmbed"], 
             BoxForm`EmbedSummaryLabel[NBodySimulationData, 7029328, 
              Dynamic[Typeset`embedState$$], Automatic]], StandardForm]], 
          ButtonFunction :> 
          BoxForm`EmbedSummaryInterpretation[
           "Choose", NBodySimulationData, 7029328, 
            8150943597997780143484890674346078567373650885616733452672, 
            EvaluationBox[], 
            Dynamic[Typeset`embedState$$], StandardForm, 
            ElisionsDump`embedSummaryBoxes], DefaultBaseStyle -> 
          "SummaryEmbedButton", ImageSize -> Inherited, 
          BaseStyle -> {"DialogStyle"}, Enabled -> Dynamic[
            
            And[$VersionNumber >= 11.2, CurrentValue["RunningEvaluator"] === 
             "Local", Typeset`embedState$$ === "Ready"]], Appearance -> 
          Inherited, Method -> Inherited, Evaluator -> Automatic]}, 
        "SummaryEmbedGrid"], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NBodySimulationData[4, <1.>]"& )],
  False,
  BoxID -> 8150943597997780143484890674346078567373650885616733452672,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.891601151896679*^9},
 CellLabel->"Out[24]=",ExpressionUUID->"61836afc-c293-4d7b-b676-faec2b357230"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ParametricPlot3D", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{"data", "[", 
     RowBox[{"All", ",", "\"\<Position\>\"", ",", "t"}], "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.891601159097117*^9, 3.891601159100699*^9}},
 CellLabel->"In[25]:=",ExpressionUUID->"4b509a1f-f731-4d8e-966b-13efde9e5079"],

Cell[BoxData[
 Graphics3DBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[2], 
      Line3DBox[CompressedData["
1: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
gXzjZOVQAmdTFRUmH1L4HyDnqVw=
       "]]},
     Annotation[#, "Charting`Private`Tag$15694#1"]& ], 
    TagBox[
     {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[2], 
      Line3DBox[CompressedData["
1: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
vhLil4JDWyPx/wOGk/3O
       "]]},
     Annotation[#, "Charting`Private`Tag$15694#2"]& ], 
    TagBox[
     {RGBColor[0.560181, 0.691569, 0.194885], AbsoluteThickness[2], 
      Line3DBox[CompressedData["
1:eJwt1gk0VV0bB/BMGSK9UhIlaaAMpSLEPw3mCsmcopRSvDRokEoJoYRMpYkM
eYlIk5xEo3CvMuTea77dQ5xbKSTp26313bXO2uv5nb2eu4dn73XUfQIdfUUn
TJhQQx4x8gz++fsT4vf/2wkTpmgOpPeuqhNpafgby4iMDP1t/dpen8itjTBz
Fg7Y/Y1D0/S4f9t028W+NzJum21Nt1rxm8RfkyYH/fXYJKmIyEsvzFpnlzV9
J3Hgvpjqv+973RLuH7/AN6ufK277nsRTU6Tkh0nbfCl5VC1ZAv21O7w2kNgm
4LwFl7Tidop2k+LnI8Cde3TFbyFCXD6pBRHvO7c8RjR+PeTy3Z9xB4WI9o2b
kUjeb7zZnKoUtBtq/Ju5C/lCdF0vWJY1KoS0hUOIWv9R3Ns0mCjPFmKY9bI3
a0gIGM6X98s7h4QDi8+9KxUiMb68W+arELtpi2kfFyRAOWeVuGGSEC9Vv1tk
9AlRzbTUZIil4+UhjVFmD5k/XxDn2CVEDmvUYZPKLcx0OfhR1UiIhC+LW9kt
QhzYXpshN56D/JkHCyrFhTD3cr75oE6Ix830eL9dIVwyOPs1qxkUJ/Z7+Twn
eSRqDJukSzC+jWqTO8Xg02jRjNj7QtQ++qTDqD/ALP3AwYMrGOja+ioU55Dx
eqiOyl19gj9ew7ITOAMInzW6TT9FiOPXaj4Zn3mGZgmlXVWhA+iT0JX3PSfE
s4q4ok7HKvjq3vCLkxlAWV3Lo9RgIUTOrFVMKHsJ0VUrvnvF9kOn6O7b01uF
uCpx50zm/rdwnTqwv16yHxcbea0OVkJYIPv6Dus61N9r0Ji08zMibKL3ZOkJ
seGls+TocTbcpN02qJf0ocFT9eXYdCHCnuzudPn6HqnsF+zW+l6YXynfcWyU
gUSJXBjnRxOqllnNsaig8fFDn1cSl8GZijnpr1xacfeMp8eCUwJ8HrR/UVTB
QOvXe9nZ33iYdULV8mwRH2OX4vgmVxncqTG7LGvbCbk6ycWLc/kY3Gj8+tEV
BlN68l4XOXXiRK7gduV1Pt6fuVNmSDwpZvCzp1cnele9MS2/wMfarUnly9IZ
6Dy9Il0b1Il8o20Z7f58LC+1SNFOZfDq55PbsmmdsA73yEiey0fmn/uiGkkM
Au1m+k3s7cSddrVY5ZM9ZD6xa5bGMjAdvTbl9IUuZDu8uSV6sAfHElZvLo1h
YFQyZCOf1oXr3Fcn6vx64BMp98CQuGzc2YZbmV24bybhKuvYAx1ZlQicZ2CC
7octD7tw7pjmgn80evBh9930zVEMfm5MdQvpJnnMVUyfVXRDUCneGH+WQayP
qqmWUTee/Z6ybqylC1f2CHcdPcEgLu/j9Dld3aAnVT+MftMFQ4mLtfLEI1r/
zJvX3w2+VF73wKMudBou+5QdymDRDs0xpaFuGEQp65ukd8HnQLBO83EGFyIn
2b+V7gH16G3qN9cuWGO5yOpjDC4bT1VZuaQH2f2aUX71ndCKvue8JISBu2ct
Z/GRHiyLKWiMy+uAslvwFo8gBkvHZhayB3ogNtHRpjG5AwH0tsTxfxkMm97/
0jbYg+1X93apnu2AU63uzZvEH6rRHdU/e2AkY/bnnlcHvqUFiwsCGVTNdVZW
leBjpsIW3fmKHTj3Ia57fwCDZ0c+5IjN5GPD0braQNF26I5nqfn6M9CocOYu
M+VjXXCCUngDF2MKjkFNOxlYxMZ4PNnPR+I8h71KhVx4Di2u2Ep8yKfUZ9G/
fOT27HbpiOYi6mG7es8OBm2F/s9PB/NReDHntuwaLnwUbi1ifEh9rt1g3H+Y
jxkWt9+9KeXguJHWsuHtDN6bhtypDOPjvFNd9qXMVkRnBPzkehL/NprQf56P
zV9mOK4Jb8XGmpjYLcRLk1mFC2P5iNp795C6dysSxA8tr/Ug/e14LzfH8eGT
3W+zR60VZercqkfuDE6+WRt56iIfanVOExSufYSupkhfpCuDat+rHINEPrR/
mO/ZmtmChGjJGyObGfz5NpnlncpH9fcbc56ebUGVgVmOD3FW2553TcSfnl7W
sHZXCxQXnHpd40j2cSC/zzyNj44kJ49qrRa477Ryv+LAYOxO+6lfxK3Fsh2e
TmqBpK9rjQjxXEYuwCadD0GObRhnoBn1YedddtszOK/1Zk88cbvMllcR95qR
kbb6ud4mBgcCm71Fr/CRJuiU/edyMw6eN7iZsJHU25nul7rEL0x0/0iFkDy2
S65+38Ag2atXZjPxyapDLy65N0O52r1kC3HFRsWtgcSPd+T6nzNtRs6Krk/3
7RhQXa79Z4g/Hny6I2NOM4pHvxpMI25WYSWIJz63PtamSawZi7cWZB6wZTBg
FXo0mfhhGZGKJYImOOxfpsO2YcA/Oqc2ifjpkzKe/71twmO9zPc6xEW1tsnG
Ep81ua3KqrAJbWtnpERbM9h/ZtX2UOJ6Le0pEglNSCu6HdJjxcBl+WShL/Fe
E/Ep7W5NcNaxj0+xZJAj7bBlPvHNUX5jo6ZNKPkY/VpoweDJeN7hX2TdJq5a
Rq+Y24TwPLnZlsRdR97srCEeFsP1kvzciMfzJqgPrmOgVtCo60Zc2/qtSUZ9
I/5J+bfOkriCrO0GJeKONs8o+9JGFIrOT7uylsGR9fpP6sk+tvyROygf1ggj
F81zq9cwMAgw+q1HPH/ir+ddCo3Yd660/CTIOlyebl6cwof9gUuv1Ec/ILSy
cN1HMwbRR+R32hFv7P8UdqTzA14EZkzUJ95uecixO5mP57WnVfYVfYB70AfD
zlUMvuo9bhMnnhNaW+K76QMMfnbbGhgzMOf0v56RxMcNwaGtwZfeY/Kj+4pP
ljPo1h75nUDq3GTYfFnyvAYUUNXJOlrk/i9TaDA4y0fBk76FI7/qUHhQK+O2
PDkvDw0Qs4uPlWKPu2t41TgRqiIV+G4AipP9u3ZO4SOr/+LEBeyHeBjp9Hvg
6ACUtdBal90DY6H39OasbPjuGEqSnzuAKM5tk2TjHtQ5WVxVaj5AWYbEG+VX
9OPA0Lz8kqpujO/TcfLtzKYGyg3qNXz6IePGVuC4dMPLj+U5xbaUalzhVxQn
RfpvObte41sXwqPWB9nWl1O/jJj1L3M/Q871xU6ZqC4UajsfmjVQSb1bfHLj
J/vPmO0tMu+yZhc+5VQrBdu9oJRC/CMDBvsQ5KR8xbu6E638u91d8q+pHwox
IqMZfXjX/vz67j2diFYsn/0q4C2lbWz4W8SuD6PCoYkrFTphMGvF6fGsd9Tv
s7/o5T96oe3Q33jkfgfcvXxDjvnUUeLvTqobZ/dCx9wpfN32DhQnuZokDtRT
LGaDSLdjL6ZGqTVPkehA0d7GtWvjWNSrgkgfd7Fe+Pobeb12bUdH4OTZCwZZ
JP/zXpMnNOxL+S03S9tgrTDJ5cJ3FuXz0O6W5GMavrHTSrnFbeBerm4e/MGi
nuSHnn7/kIbGO708pbtteHPRvqhshEVFizWU+JfR2NNBdcbltWFwXme5yjiL
mu51hM4opiHt/Cj++LU2qDqrm+yQYlPqIj6J0rk0vos4TPKMaoNm21iwYCab
ElSKSYwn0ahx4pTpe7bh2eKbcSMqbCrz5cKUukQabn7W84Pc2qAu6cVMnMWm
3jl42l9PoHFS5njJXec2NLR/PK2ixqZkeuVWmsfTqPT8rafjQPpfa2I0NNjU
hLJVvHMxNJ7v3nZXy6INIqHKrOJFbErXJOKscjgNhIYMay5pw6mpkmqVhmwq
ZE/qcc9AGi2/eIZrxNtgqliZHLCSTWnxD9WtD6Ch4PQ8tUSkDbk3BPnKRmxK
8+DKdXr7aZhUnFSZ/4cH2fbFhX7GbKrEJi5V1J/GtAtWkVKjPCxd7jelbxWb
2l7uwb+zi0a3md9vlpAHzo3fRsfM2dQrSxklUS8aJQ2CC34cHlJlyuPqrdhU
/x1jlRo7Gj6HMzNL7vEgH9p7fok1m9prMIH70JbGlOFL17WKePD/3Dz3IvEL
m5qfZdvQeKqXUnW9gIebw+lz19uwKVlx/lC4FY1rtcVnY3N5qGYt2JZky6YC
Boumma6jcf4r9WX3NR42H3Z6QG1gU2phgoUPTWgUChdlLDjPg8Yivy2jxC29
x3Vzjcn3YFyM/vVIHgKcH8fqb2RTvS+47qlGNFjDKweVIsg6jJe+vELc5NIc
9aOGNPjzrYelT/EQ2G/q67CJrBt3xh5yZaJQk5b/cogHff+wt0eIR7hUpujo
0xgtdZXYe4CHgXtLXmcQT+9L/Dx7KY0rSaULe/7lYUJBeGwH8RV3ekVF9Wjc
+/J7sMWfh7CrP1dY27Mp5YaKr28W0ZApP1dU7U3+tzVozJP4BZsPKZVaNAx8
HlTYbeOh4kFkcADxcEdxn0eaNKTCb/384MmDw8f5+88TX2f3ySdvAY05KfuG
+C48vA059jWJ+Kf04rSb82nIvSt4GLCFh/q7EvMziC+Sfvs9bR4N52/7c4cd
eSguKJDMJN67ftXBBA0adVptL07Z83A61TUtm7id2LQZMXNpmCfq/SOzkYzH
pP9jDvGVi7w7zqjTGHdLPJ9oy4PetI1v/vYPZunUhs6hMVhorD/LmocFN3bs
/pt/mlxU2yE1Mt8qZ6kcCx6+uSiU/h2P8XCoYuBsGrqvZsgtXcdDzwPcvUx8
9LZyoN8sGuv6i1c/Mech2JDtGkOcpe/PeKvSeLtjc+Z68NBRWVoWSFzbwsdj
y0wa63UPDrkb8xDpxdrrRTzo5VzrTco0rEe2CPiGPBgmdb+z+Tt+utbDegaN
w3/EpYJW8DDCnElXJX5MbOYX0+k0zpRc/Bi5hIc2zTzXLLKPm3dINWkq0AiJ
efz8wQIePMb6LdeR+tk7ciRTQoaGh0pYy5ypPJTFBNXJEY+w8P4kIk3qR8ea
VziFh6v/aYk0kvqE+LRN45I09vn+UDSdzENsPbXXk3izuHLCsASN8KVls9yl
eTC7vdF2kx2bKjfS7vgsQsMqzSQ9+Q8XxXevL3xBztFAzfU8zk8BVC227VXu
50JTZfLBL2vYVOLZiq0tvQL06LZUWL7gwkZdYulO4gphKxuqaAESonQEOc+5
2O0hp91IzvWDC8cO3RUIIHchy1HqGRfTuJmcwtVsqjHmP6tIvgA+jV8G3zzm
wm7qIlVzMzZVPV1tnlGnAFRHwy77Ii6WrtUe6yD3z7I7ms9vtwggP7Rk3d4r
XPi/6RuR1WZTknJvDDJfCcj3jdXF90Fc7Nm1e8UkGTZVf3/NguXZApycXfUx
Wo0LCc3L27vIPexhZphneluAkfRqD81ZXExvsJr5QJJN7fT5x90yS4BH/vHz
X83k4m1K9Eo3CVLn+2rWe9wSQCrT5pLEdC6ya91VTk1gUzX9/1lGXCP9L96o
i5Dl4rrBBHvXIRaVb79JqitZgEn9NpOSfnKwjZulsrSDRS19mjWDihRg5heV
dvo9B5XvX9078h+L2iDHOye7l+Rfe3R3WDQHrj+Wd4TeYVHiKd0jE/cIcPpZ
YPnncxyUpZ38eiKXRT0S25Uv4kf2xbPyqNtZDuJPbK04nMWiii/vbRj2FSB5
6KiuwUkOwnY3DK+5yqKSwrdoC7wFSDPcEvn9IAee9UZX18ewqJfeG/Qa3ATo
uzJVL2I7yS95TffrLuJTHwW3WgswHJCqNGLIgUTpxkWXdrKoXLrYmGclQOa+
89+DV3DIPeo7ruPDokzsqiw7LAX48aLFnNHnQDpcR9drK4v6ual2qWC9AEu/
ROh+0uFA9yxzI3Uzi/JfVWs9Yi5ATY+IC0eDA9FLiUcPgUWJmH3PX2gswEbP
MBWOPAePO7NqulaxqLQFA826RgKYPstX2SrHAcehUGhnzKK+RR22NVgpgLr1
3Ph2GQ4sqoX5SitY1KHgdmkLAzJfje4mvgQHqz1n9J5bxKJaeedpP30BZP8N
6xr+1YoZU5sqWheyqPC0qC3BS0kd/kvFnPjZip/2M3Ysns+iFM22TwpdIoCT
tXG+2HArblz+d1qVGouK+2nuGK8rQGtb44Z/vrXCpixvrswsFmW271p3uo4A
rq+D2anCVry6VDC2YSaLCjx5tOK2tgDreszfzRlohfR9ucwLSixqovdYV9Fi
ARSsT5vl9bVCosBj2jtFFkWb2TuULxLASC5QU59uxf8AOS7lew==
       "]]},
     Annotation[#, "Charting`Private`Tag$15694#3"]& ], 
    TagBox[
     {RGBColor[0.922526, 0.385626, 0.209179], AbsoluteThickness[2], 
      Line3DBox[CompressedData["
1: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
5nn0XMQIQ/A/XqePpw==
       "]]},
     Annotation[#, "Charting`Private`Tag$15694#4"]& ]}, {}},
  Axes->True,
  BaseStyle->{FontFamily -> "Arial"},
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  ImagePadding->Automatic,
  ImageSize->{356.36215624469145`, 372.339361125739},
  ImageSizeRaw->Automatic,
  Method->{
   "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}},
  PlotRange->{{-0.27054783135912064`, 1.5926174858302664`}, {
   0.40227178888694376`, 1.5308042439421263`}, {0., 1.9770299313330162`}},
  PlotRangePadding->{{
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{-0.013319266858108102`, -2.443265920032501, 2.34099855641521},
  ViewVertical->{0.045039373951928446`, 0.22427753973432743`, 
   0.9734839700604914}]], "Output",
 CellChangeTimes->{3.891601160720244*^9},
 CellLabel->"Out[25]=",ExpressionUUID->"2d9ac7c8-eae0-4a79-b3d2-1164b7d44ba4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{"Map", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"data", "[", 
        RowBox[{"#", ",", "t"}], "]"}], "&"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "\"\<TotalKineticEnergy\>\"", ",", 
        "\"\<TotalPairwiseInteractionEnergy\>\"", ",", 
        "\"\<TotalEnergy\>\""}], "}"}]}], "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"PlotRange", "->", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.891601171078047*^9, 3.891601171081538*^9}},
 CellLabel->"In[26]:=",ExpressionUUID->"1d5c90bd-21d8-48b2-805b-6d9f58830112"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwUV3c81e8XF74lyW4QKSsJuXbIOfaWvclKkhAqJZEQZZQkREaipLIrCcnK
zsy+17xcsxRJ+t3fX/f1fj33+Zz5Ps/7HHbxMT1DS0NDo01PQ/P/X70z5K81
sxYqPx/0vdtZyX+SXp3bd4xLBtiKacHo9piKdEZyWgmXBqS6sSQ3Rf5TmeQR
vHlF2AiIu3+feP+BDfTb+ovTuczBcGPGOyaSDwRjeJ/947OBJ+EmofuzRGBT
z/WRs7AjHFxY/ZL/gQBz4T11zknO8H3deuMfvwJYua19TOByg70hW2pxkQB1
6txvP6e5Q53vmQ/HfqiDpMDJwlW+c/A+3HdMIksH0midXgg9PQ+m+uk6pm2G
wDAelm0p7A1PtqT1Wz6YQAWxq+2zuS/kPFZc3uowB19jNz37pIsQqzWxoCFg
DSPHb6vHcgXAoJd1167bpyExY3+NkN0lSOrN8mpscQY9lnzlqrTLYHyORTnx
hyuUL7bKLvFdhd+jnYpdWR7g5ehYfNv5GtDfIH7QEDkP/O1LEoeeBsG3GYKk
ZvsFiHvFLmIifAP0f90MuVp5ETR5c3Jmz4ZAQN6hP50q/nCjIZX1k3kofG/k
2b3SGQAycmKxNkk3QWHVsjZGMBAy95yKvMMVDhGv6dgwOgSC2h7VWVaEw+sD
r8ZW60LBMoJIK2AXAXwGlYySbTeB6efFkA9pkWBqP3PX9uctCOxJDJzni4Zi
/uc7onOiwCxmpPxdTTRsj8s7wTUZDRIawj/Dne/A4zV5m4Rjd2Gy5O1F3qd3
QdbowTfsigWTB4OeRsJxUBOW2WZQfR/E9AVecDfGweRMxK+PNxKAgc5rZvps
PNQSWY8JqT2A0++3iqrN78Hf4rWkvp5E2HP0noR10n2Ir3X/1nI0GW4ylByJ
5kqE5Tr/IrmEDBDVvh9V7JsIF5d7413MMqErwmd2qDERuLV0WGiImSBIJ/ZS
4vJDKGNdzVGhyYaGvzkSPV1JQKM1frvDPgeYfiTJ8sWkgJ77ttwLkS+gjHAp
SWciBd6JEFQJcvng6Gu2dlExFZgUFa8YkfPhzQLL+zpyKlxv3J+TZFYApuQo
ZU/NNFClvK1303oDySPX1Mu2nsDFjJl7ye3FoMpjkzNqkQHLxzfELU+UwJyt
/H8MrzJg6HLGC7VnJXBw/qrrK/FMqLs42P48tBR8zskJ0Qxngt/0gZlXmuXA
7vbm+TOFbDA4wRHwkaECrG2y3iyv5EDYnh1XmBQ/wdKQOWM29zPIppnLfR38
CSIdGc6YqT8DUbNLMv2fPkGJqw93eeIzuNFNfP9BvxaYvU9GBMnngstO38Ke
M5+hPmzAdntwHuxOZZ2yLqkHqQK27TwM+RCzIiajU9oMXyTqndok82H6o18W
kaEFnIoCP9ywyYftjiY6tI4tEFs+5kvKz4dffpYvSDtbgVzzaijX8CXUTgvE
c3i0wZNe3SLCgwLITJh5Ls7XCbv+3bTXPvgGZqVeFWcc7Ybkc1aOYtS8qUWp
e6bYdYNgj5gTm/cbOK3c0NQX2w0qL/pdhz6+gZ2yy2U8P7rh/YuksrcShRBn
5Pezr6YHFszmK/XbC0HRbM6P/VwfWDx/1OK/uxgi3rUz7VkYgDSHMAP3w8UQ
s+bwJ+vIIIyzX2izli0GC+3QhwEug+ATrNZx0qEY1MsOcVC+DUK06ULXjlfF
8H2I/QjflyH4uKk2+NigBHKu8yWWlI+AkMki+fPdUuAqtHwbNUEE7hBtxbNZ
pVAyc6NyPwMJWF9l3mV8WwqVEgZHusVIsMFgJmEyXgrlWU9dGi+ToLPmrf+o
QhnohXtNvWYah2uSN7fWp8rg21+PzQicgHYWTk4JfAthh8gpb5um4Er7CUhe
fQ+qK2+5QxwpwCxRNvWF2gdbTlPWC3cokBMrGfOHpwKYGwQnb72lwFeDIwOO
mhXAHaTKI8o2D8daOP2Fkiqg+cfYa/uGeRhrXMotlv8A6+5/Ys4qLIL2p2fM
bdcq4dqb5fWa9GXYV8o2um1bNbDePGdcTvwB9jF/zCf3VkNAvOtc+NYPyHab
amkQqwaFtYr8CzyrILbn/fu71tXAfrakI9Z6FdQuOz3cU1gNbWb1/zF2rYJc
mlVu4vEaYFKrOfz3y09wdsx1eD5aA8nPlBSPtq9B+bh6a4dyLVjo+LLki25C
n87NlVjtWvhWxVhTY7QJv15X7TUwrQW3Z41sq36bIB90wrnpbC0YNND1F37Y
hHccx3/VJNRC1S++zHCjv/Beg/tQMbkWeq8X7H96dQsqc5f9ExM/g8Inc9Z9
/jRY65l+wGa+Dr7tyIk9xkyHJbPnzzv+qoMOvu6VRH46zPFQ/OBKUw9ZgSof
mOTpMMK939absx5izHMyjjjRoY4LW+ot5XoYVZJJ31VChx02Eftfx9TDcyLX
2gM7ehzWubCHTrwBQhfebk28/Q9/Cp9keXWhEXpmTWziMxhQZVyt8U5gI6Dz
lPPMewaMTNcJ8bjVCEvJb0TMehhwL6f5kkBKI/xqZhVx37kT5bad70ita4Tu
Y5/9ggJ2YuBQcnzUgSaIqrL47GPEiJvxqyxuX5qAeG2qlszGhLS/X7IeEGoG
xeNmY48HWfBAm9oPON4MiTEHjHCdBWWyBnrdTjSD36k71ZuMrHhGd8fj14bN
QF6MkuoVYcWmFBchtcvNcI3u2G+6M6wYr8ileK6xGUa7R8ZPj7Eiz/VI17fn
WoDP+kq93jAbyv1zKjd73Qqfv2RFjaxzoIFhTZjmu1bgXwykkWLkRNfHfKfk
a1vB2/Tp44QDnHhPfnSGu68VlOQNXQNVOHHWx45r/G8r+L3VNOwP58Q0osV1
X8M2GDXSN6Vw7MFttXpqsfNtAH/XmcuV9mJruEx7g2gH1DsdYLYo3Y+KLC20
92U7IEVu80tL8358nuIsb4cdsL3jupI5aT/eeh2XuWTRAUn7HoenMnOh4jey
3/6bHdBy5dGjrXNc+PxY+j7P/g6Q2/ZARUaQG9Vmwwq3q3WC/YJK4UDuAeS7
R/n9YrETnjAW28fOHsQq55AXxT86Ydnn2W0ZOj50lOaw+bDeCQ0Mpq+WePgw
rU/xXSvtV+AzvqOYbcyH+3nvXF7a+xV2bP9XuPGOD9nzRX7IwFeo0bhH26B1
CP+rOzNfHf8VVtrC5N0FDiNlbWy0V7ILArleNsf+48fys/G1enJdwEmf+TmO
VQBD+1Vyq5W6QMRASTTjsADufZt+4YVWF5ivD8Uuqgug2mW7zev2XVAu/uar
brQApq72cQlGdUHCf6dL6fYJos5Km7nfWBcorLc4cIMQcjgHK8xMdkGtezuB
YCqEo51iPPZzXSCe6Chke0YIAwrvTmj+7ILJ+ab28btCmOGj68e1qxuab92Z
+zoghL8W6uJr5LqhXqgj5+RVYcyZ+9DMHNcNktuSb2xvPILej04JeD7ohtrr
+dLHh4+gvMZEUH1yN4QLx73yWjmCzemM4tefdoMAk7erMI8IrhjbxM++64YL
7sd3JvuJoMrbX2Z1E91QUSV4LF7gKA7cIoxcPdEDiVv874qSRDFbsl62V6UH
bF2/Oxa+FkWvEes4SY0e8G5SWG5sEEUa+VCYMeoB08wv59TWRFF4rj3L3K0H
buQPkT1sjmGAsZf78fge+J0S6/+EXwyZefOWJid7IEswP6bnizii5a2Ridke
+FZMQ+c+IY5+8adbxhd74Mi/vd1sf8Wxb9v+POJ6D/B5nOB/LymBT6ajHIeZ
euGTYdIPvRQJlCj0bOuW6YXzTsuUDJ/jaKgu8bI2vBcWqq+XCKVI4o3rjCmf
onuBfWDGuSpPEgvLpiNr4nqh8KQDz9lySeQUyXCpSu6FhvNnDs12S+IwEyt3
RUEvZFf/sSlmIaBX30pUUU8vBPqnfL14h4Ax58rcMwX7wKnNpfNyrBTO4auo
XaJ98BtvRZZnSKH2/mf5l4/3QcTIWvbuYimkbUxcNFDsAy8+5nrafim8Khhw
+fepPmDYaH6/m18a3cekIk2D+sDPgMqCSmlUtSh8Rt/VB0w6nydDtsviE7Hn
jT79fXB5y0GChUcWN+kyZweH++B5Q1B+JUEW3xXHixfN9IGR5l5NfwdZlGD1
KXP42wdd9hHnLctlkadFvL5cpB+icm70Ebzl8Be+nPQI6Yf9n+yf2K/LY2UO
5fGV8H4QoBMrvM2qgGEMYmaR0f3g8fJzba+IAjJ3Fnx6+qAf5h48lh62UUDh
06+fjOb1w40i8wuPPyqgZXCRtXlnP0RW6h04HnMCy96/bYXD3yBgVDrOSEcJ
r/Gu3zIS/gahKTa7Y88oId5UUHI49g0+82aw/QlTwlad9y+uyX6DTnqrvLNV
SjjZXxFZpvsN3CJz8b68MnL++ojH/L5Bg1XFwyfSJzFAqq507+dvcFLBXo1s
CegucyjzftM3mIejW2o3AK3lrt9lav8Gy5rHHi48A1RSlHGhHfgG7pIpj+R+
AdKq5bAsLn6DH+dnPtoZIsabhHvWcw/AOr1lmuoGYqgZ0QIPDYC8wUBsKasq
+lkoq34QGoDEmT1+NkdU0dJmdV+R5AD4fdLiUbZQRR5nt/o0rQGIC876ca1E
FfN9NQ4F+A2AintPz5Nrapjml7lr6coA3Cx2Of4wUQ1jAzZ/nQsegHo/+baW
12roG1jadjpqAP7EFYlvTaihfKhgkP6TASh3Nv72yEQd6+Lp+/ibB0CiML/j
g6IGlt93+pTeMQATGi2qejYa+PxBZcH+3gE49ThIVyJQA+8+CrjFTByAqH+U
ur/lGmiaMSm58XMACgk9NPMKmjj2uu7u18ODsOzp/KvmlBZ2LtDPS1F1m4yW
uyfJXwtrxDQNEsUGoS7w49WAZC3MzK9nspIfhKiaJ4mb41roktsQO2wwCBr0
TrnEYG00ndq+eNJ0EJ6MDuuTnmmjuqC2UYbVIGy5BAqdb9dGwexGZheqDuRf
47h35LAOTqc3xc9cGQTBZkGjZ2062DfMsKwTTPXnWfKS8YYONh7QNc4PGwRu
42zGp0d0qe/NF9YLsYOwKOb/VT9cFz0fNt//nj0IV/UDuSS19HAhpvXB37ZB
CFdsCRha1sfRFqZVx+5B0BPuEtEXNcB2RkPzGqrubHCU3ahwM8DXUW2ctyYG
ob0y4sj7YQP0DW9/yPB7EHQtjuRxDhqi02fmX+e2qDpWt5/Vg8cITWhPWbbQ
DUHu9h8naJyMUCq0Y28c8xBcznmyfIRihKtBnY84BIdAovh9gsZOY5ysYF0P
ODoEDNl7srgljbH3t7F1n8QQuC4Jun2yMsbyK1/3p5wYAseMqmdpL4wx0L8r
5eCpIYjay8RkY22CHsXsGyHmQ/AYrxiFRZqgzYqpLcmGej66IlZRZoKKPt3c
OW5DEOI703p1nyn+8ex5fPTaEGxjl3fSmDVFczmH+xIhQxBuPeQlxGuGBdum
I6XDh0Cw/uysrKkZOiavXTwZNwTRLpLNDDVm+KmeW8ckewiuthxr8nlpjtz3
n560zBuC4xSaZ/Wz5uhnLyZtVzAEE5dGIu4ftUDBHycPnikfggPZWrMvX1ng
7UPOq4HNQxDP56r+qskSiZTZ2eCOIfD7SR68zGGFCm/9xsJ6hsBoTmhs4rQV
zhmGN8eMDkGAntv9Z3+t0DAoLzPz+xB4SdB0yhrYIEffgkET9zCkKQft8xK0
R6+sy2ptfMMgAbZNizftsc7rn3yX4DC8C/nkLThmj5fp2ASGJYbhQsk5CaVH
DtjRnrKfJD0MoWyuzUYrDiiSys88rTAMl5zimIJ0HXFAUub3ktowPJ+W8T76
3RGlNisXV7WHQXHXh4xs1dN4p1Fz8rfBMPwZvbgsFHsaJxLaB7ZMhuGsoIuO
SM9pVHa06qCzGoZfbnLHWHc54cOjxDoG+2Ew0VQp1zjqhIurHhW7nYdhfXJT
z1/DCbVqVt6wuw/DHe26Ehd7J8y4e+3ZvvPD4N7cPEL0dcJ1S7rHPL7DcKTl
DGvdTSc05o+5d/jSMCw/jFOej3PCFwuckcLXhsHT1WpTPdkJad+nBx0LGQZ9
fye1T+lOaBcufFEyfBj+Bi2/OpPhhKWn3rjLRg+D+NGoGyrUc6YDCvaKccNQ
86fyiNsjJzwzXWMCD4bBuJc/5nesE1YV6WprJA/D9XoLiijV/t7gLmXd9GF4
NaL/QOyiE/ro2EkZZQ9DrrjZhROOTtjEMXnELG8YPl39bXVfxwkPj3nxWhcM
Q4z0xbIrkk54Lf8nu0PRMOR7VPYR9jrhMdUdW+4fhiFq3JDk8+40Fua/PPKt
ZhiM1uubKgNOowynsYluAzVfJbsqLktQ8zuTnHPsKzXftu7Ee2mOaBQrqr88
PQwJKV633C46YNev9gDneWr+HS4weh1xQCsn/yddK8Nw+e/CubOj9ugkXblS
ujkMKjvMagSM7dFvwDD5KvsIrFt+OSGnbYe/1L5/mts3AvkEjpDXO+0wqCCJ
Ysc7Atl5p1KPtNtieMiYiorICNQ+JcgoOtgiw+wtjzfiI/DlkDnb4BFbjDUV
STgkPQK5L4r3Rq/aYJLQxSlalREY9CArMCTaIHf8HpYA9REIct9t2e5ugxnr
7xWmdEZAxJZe7J6SDT5voY1pNBsBI9GPRTNz1igmm1emYDMCfdH3lLzqrbHw
if7YC8cR+K75qKw5yxrfX0yUijk3ApY9PzKXTlujypCC/V/vEaiO55V8qmqN
tRojEd4BI9D8yITIKGSNWq9vvhm7OgK9uHSOl9Eam/cJDxiHjMBN3fyHX5et
0OhmM21t+AjojhWFHxywwu45bzHpOyNwue6Fx59aKxz++DZkz8MRWCzPqlR/
bIVOR+xfRKaOQOO9AwIZ0VY4dY+mey1jBELgbYDnVSv03MjZ9Hg2AjRWB+88
8bTCRVdd4cF8avw9I+4yDlbo17ZwSr9wBP4pPYgXMrHCNbmEq5VlI+Dd9Tzl
vJYVXs+Ueyr+YQT6xzsKaU5aIQ3jUOuTGuq5Y6PamIwVhvuH/GJpGIHJOaeZ
bRJWuHNE4NDNlhFQbLjV4CpihXFaTbrfO0fAPY9FjEbQCtkLvfxd+0agVbu9
pOuQFSZxsaX3DI3Au6qP5/sPWuGBW2UNmqQRsN4uHcJIxZnzNsvl0yPQnTYf
5EHFgpZbXCLzIzAhYqa2yGeFz6uz1VNWRsDLSH8gmd8KxY9qX2Bco9pLTXp5
RtgKixMoSUGbIzBzTtbB9JgVym3G18xvGwXaSMUGe4IVVpyRmXPYMQoqcyHc
txSsUKXjG0cH0yjoqtqUfUYrrFUIPonsoyAcWC7Fq2eF2tmHzxbtGwV24sPr
ceZWKJPMLNzAMwpKFYeP6FHn56G4P5ODh0fhoNyy8To137vDyU+XhEeB/nXC
4+QrVrhxtdeFXmwUtGt83olGWOGMT+1hLsIoHLBRfvD6gRX2nHlDFJcbhXGR
7/qCT63wlUm0oxWOQuF/C9NTdVaYqn2Z10tzFG6m02VI9Vth5EnX4VC9UUhN
mO3zm6P2w9GTtvnmo3D9vrB2J4c1GvKJclXbjMJ7zTS9paPWqLhn37dux1HI
bbVw+4/anxzbViz+eoyCeT/PL24/a6RZG+Fk9x6l7of8v3hirHF+vrlb2H8U
0vMqpA7kWWPDtxwT4+BRsCivSGUjWmNJ+33WM2GjwJvZXcW0ZY2ZdTc6rt4e
BcVqMT1GXhu8Wmht+PT+KFyoktFmd7RB91xNpndJo3BvP+s7vlAbNE2Taml9
PAobUiJ/ZZ/aoFgUk+6vZ6PwsDtUO2zeBsdO12joVozCjWZHw6q7tthq8YrO
sXoUGlM/HJItt8V3+qm1fnWj8Ora45yPJFtMkA/AtPZRSHO7MkGnbIeaLCLK
S+Oj8O2Bwi2Tv3b4sipe+uGuMZCImYt6UeiAyaXXv79gHYN1irehEsUBw/PP
FVXtGYNv09PGj4Ud0TFJ/TiZbwzm2xmIDzMckc17TVRJZgwo7t9eZCWfxiu8
p/lJ9mPguBhhr/fFCV2MJS2Hncfg1Vm/mcAZJzS6te1Ov/sYSMde81T8zxmF
Z5+utPmOQXSn9D9ecEZ2nktCXy6NgZ/jeR12O2f8a6RlU3dtDBYIcuUnLztj
Tym5piJ8DBL5irT6Xzhjzcz71bLoMXg7XR/HXuuML7nvihTFjcEnF0GGwwPO
mGRob1/wYAy0t+VYzy46Y1io+L285DEQvf1jzITOBb1Ltj5np4/Bu5OTNup7
XdBmumMtPXsMptOW7HKPuKAGV9axlLwxWHW7uukq74KSBn6nEwuo8V+L6vHQ
dEGeEPUH8UVjcP3lrsNZJi64o5iz8U451Z9ecd8/di74fXJqI+LDGFws9VP0
dHPB0X1vJW7WjIG77OdbY54u2KwX5XK9fgxyP4+0mPi4YFmwTdKV5jEoV5Ho
rbjogpmFos1+HWMQWiN3ltPPBWMm/vy90DMG+1VC9R19XTBwbxvh3MAYfEne
kEz1ckFX3Sdn3EbHYKU8daLZ3QWNrvuknJ4YA3vPdr3fji6o+AbbbMnU+ua0
zkpYuKDwONs2ywVqfLXBj67ouiDbngkZk+9jUFHmOTCh5IKb2qUeBmtjYKle
KxEu5oLkaxFp2ptjEBBev3r+gAvOWR7zyKIhwoaOlngRgws6LXPQ8tER4coy
x5dzq86oLzAly81ABDPGyY2kRmq9Kts6HjES4TLX+naVN84oZ1l+bs9uIpxs
8j7/8aEz8kffTmdlJ0Kr++6hV6edMZnfVz6OkwiCLqJsZurOyFxp/XXXPiLs
0WgzURB2xt+LR//bwUOE6K3WF0JzTthp3ur1V4gIwbulVnZdoOqZxdLtQSJE
eD2cf1vO0Akrb6dnrosSoZjbe5uhuBPmVXj3/DhOhIP2X5Q2B0/jjUNsynMn
iHD3WUT27Kgjis1b7Oo3JML3tNLeHnoHfGduUH3HmAiHMnRqq5rsUf2jmr+K
GRFaYm6LNsfao23c8aFn1kRIZq2PPH3AHqMld74McCWCvwgX4buGHXKm/HMU
cSeCJSNvtiu7HWZu+8U+7EEEuvP9rcxUvr7rGr+m7k2Et2shu1nDbHE6oFKP
/SoRKkOaR1O6bNBvpHirPogIBfOhxLcvbPCv5oviqzeIsMgblkkbZoOc+5K4
Sbeo9r0exHDI2WBmSEx7YiQRapzksIeNOk/IYWE60USICxsOLV+0RvX3PnNv
4oiQ+NeetvelNbYfdn/iep8Io6c9ru+izjvbO/am+xKJMDIjaWt9wRr97HQr
bqQQwW/fv23HpKnz7S//HcMcan12drV4tVihmDuXyrY8IuyonAxjLbXCt+0s
30tfUM9XuClv062wPWPThucNEbhf4EfGACu0Zfixu7OICJ/+iv9X4mSF076z
n26VEkFxJuSrtZEV/lXtO0p5T4TmguKoZDErjMpvHXlSST0frGiQ5LVCTo7P
902riRDTIn/kMzP1fQx6r7m9lgg8RuP6p7ZR/Zl88/t9HRG21C3Yelct8Z1B
7qsLjUS4RrgYaz5rieplac6Hm4lgzbW1q33UEtt5H+zpbSWCyFX6vWq9lmgb
Gf0lqoMIXrKTvkWtlji9GBKs3EUEY4FuPt56S7xodZmw3EMElyta3pFVlrhZ
7TX1tJ8IE2ozs4vvLDFKxDXFapAInY6iTtallsh538Zw1wgRAvYrLdQVWmLG
71PbqseIoMXatUP+tSWKumiV+Y0Twagu0LuowBLLm5XPCU8RYZPr4RF5KlaT
luYdnCGCm4zT/RYqbnt89GvsHBFosi+H+VHvW9MfilBdIALhucExySJLnPTa
e+LnEjU+EQm2nWWW6NvLtPD8OxF8LS330VZQ/T1Jl2X/kwhNFa9KD9VQ/c39
bc66ToRut7wxz0ZL5GBZZqjboNb/x9DadIcldn28c1v3LxF4le/PUL5ZYoKX
0PaOf9R6rllJ75iwRNMDNeHmtCTIzQ/1h0VLZG+2pRukJ8G8MeY/3qDeD/x5
8/QOEujVCWoIMFhhwpF7NFM7SaChfEFgdC9VD0XU/11iJkHqj+etrFT90SXt
dP0SGwl8J/2LHlP1RsL4xsYGBwlE8tX+hFCVgOn9h1dD95LgmuVEU5O/FbKh
5Pp/XCRQ1q+QC7tjhZ2LzZfvHiBB2eoBqffZVngv/cxP1oMksKZ7fymo0gpZ
/6R+PyBAgi5et1Mjq9T/v5C9mCVEAno2o+h0ql64Z925JCxCgo2GPiNRGWtk
Kf9vgSBO9Tdd5vvaNSpf3DLPvz1Otf9wsMSVqn/jOJTmlKVIcMF4z4+VL9bI
fNF3RlueBI2L51dGDttgO98u97YTJPid/sA3wMQG49qfTZoqkyCJ/ktAxi0b
3C02RHJQJUEOQcH75LINtg5ecppQJ0HyIppsitpiTDTrmIcWCeKEAw6SPWyR
aUZz2F+fBKzWLPP/Fql64CHR9rchCYaPHzuWIG+HMRpBAzeMSbDp4N/PG26H
u7IL+6ItSMDJtBLEK2qPzcb6FizWJPhoVlrDHW6Pd/5NdSfakmB7v9AnoQl7
ZHQ48DXjNAkuM6nplBU5YPOu8lNCLiRwf9bmvHLYEe9UGLfnu5HAW/DevpfJ
jrhzf2RL2TkSaM7YSBo+Po1NDYf0lLxIIGSpssrC6YRRlz401XhT+yHzYkw2
dT9j6F6ub/EnQU9G6pLWNmdsunlXw+QyCZ4oSDUO2zhjlKTw575AEjCzP/FM
f+uMO+LsakjBJDAPvE0KueWCDcq/VM6GkmBRzJ13ecUFIyn3Ps6HkWDgK6eb
gLsrbtdtqFi7TYKDWVUep067YcOa04ngOyRgeWw9ljDhhpG5f97SxpIg81X8
MwavM/gfPaFsdwIJsk7cf5wa7o51xS3SDxJJ0DHQZ8jCdhbDnd2L9z8igfCO
W2d1U8+iBus2wpMUEvDISNKy8nogffXjNwJpJPAxeqqS99ADB5U1dMaekCAx
fesSF8M5fFMxT0zNIsHV7V3Tl93OYbjCw6uWOSSo4e92G3h2Dm3LT7Kz55Hg
UUbbK4emcygpM53f9oIEaikd0eVfzuH24jj16AISRN0wOhj74hwOH5cf1nhD
7WdVzdrb585h0auxAJpiEtxK5d+2e/c5jDwWtbuylAR3uuk/VCZ7oP0Lydwr
b0lQ8DbZuJfNA6WODKhIV5AggDbscEbwWWR4drN/sZIE9s/x2ybRHR3TBBRH
Gkngd7qQedzFDWW4W7uSm6n8EDhfwd/qijuTA86bt1H738/t0nklVyx9UJ/W
0kWCY90+b+rEXfAOm7fs7V4SdObvimcuckan+L3tat9I8Nlw8+CaojPuunv2
3/sRaj+Wq0cUOzshkYE1+RKRBAlXIgSG/pzG8sh3koQJKl+4n1pqwml0Cdvp
8pxMgg+FOeamkw6oQFO84UohQWWi5vVXGg64+4btA75FEkjU3d/j98oe3119
WZf0g5offSm3vw/tMG7NzMH0Fwn4B6JCP3LaoeulzZ+7f5PAqo4wN5BiS+Wr
4ZGILSqfCkV4r5XZ4OTiz2rcNg6VjpqopG+DFV5PrDfpxkF1XxZP15Q1nvFY
ivbfOQ6rU3nF2iLUfWL6Ef9xpnG4/ZqnILmDOl/c8MMc8ziUfH/XnX3NCitP
35935hyH/NaaqK1B6ny0kj5lzDcOTepOz69UWyC5Z2hmF/84FP/95MIRYoEf
TcNDGwXHIeylsd4/tEAPo94iFdFxUJn6m6XXYo4qrcF6G2LjMGjKMeH7wBw5
9IQnyo6PA1OfUVqAgzlWaV7hFJcdh7ovUytlv8ww8TPfK7L8ONhJ5vI01Zvh
OdUmzRzFcYhxbslySjJDzpNcVw7gOPyJ+Sc+rGSG52U+DOzUH4f09OM8J5NM
saazt+Cd4TgwHIh19fQ1xT0XlkPOGo9DlPbzr2n6plj9TEi43mIcdHxJ36bp
TZFj3z2/UKdxGOKModsRZoIeJfmax13HYUWpbo+xqwl+PFW/f/TMODR0OIlY
aZrg2aiNKqXz49Abmld7a5cJfvjttmvt0jiMFh/ZeJ5hjKxJIaPPAqn+p+Sq
ECKN8YxUapF50Dhwbr0O0rlgjCznO6yKQ8fhdWWQKttJY3QdPpFz4e448L4+
vHC0/hTuqmY+OZk5Dqd/Mw5fCjdCJ7ujrA+ejsPV9srPdaeNsGxNfUI1dxzW
BRa4PisZ4WnJq9EZL8chd8fg7g8/DbEka6LXtnwcmP9Wz/BeNEQGla3nO9+P
Q4/kBYKXiSE6DO6//u7DONTUvHTSkTLEHRxG/Hs/jYP6aS7jtJ8GaBf+zvtr
yzg4JbibW4UZYOGhbtXQ9nEIZY43eOdugP99XOA8/nUcEk109sTpG+Cbn/wf
YvrGoX1j55nYvQZIdzZ2hw5pHO5aFRY/LNLHl7oumVW/xoEY9LJo7Lceyogd
VoHf4+AtzKI2PaWHVczEoeo/46DkEL9TtksPO7sd9n2imYDsnk+Hcl/q4aqD
Tdxnxgmo+bb2t8RZD1X8jK83HZyAzbuhk5EDuthozsKte3gC7vk+/Rv5RReN
5dvffhGYgPSLzxSq3uuiy6b+j2aRCRhP8HzbnqqLtyO1PdukJsCPrFbmfFoX
O1NVrLu0JiBmUbK6YEUHbYL//jTVnQAap8NP6yZ1cPx05YNu/QmYtv7myPBN
B1cFFTt6jCeo8ziDma1aB7neyGr1207AdX7N2n3xOujyWUxm2HsCKmX5NCPk
dJDyjPLV/uIEdb49NuQW08GAqHyfEf8JuPJ5drHrsA7eNhR5ORpI/T6H7X+v
dutgQb8APylsApbPP7Fam9bGnxRu1umkCXgdvMJwPUMbE9NnGtNSJiD1jzG7
Q5I2Sp8qDTFLm4DWi3sWHWO18WKx4VJN1gSIGN6Xqg3SxoXA0PbHBRPAGfJN
/YeNNk79Nx1jUjsB8y0ibVYHtLGXr2jnx4UJeDkctpz6UgsDvgZ/8l+egIqb
I+XTOVrIcUvvquiPCegn6hRKPdFCk+kJ8qP1Cfg+tMpaf08L2wr2NvnRTYJb
3I3tzy9poZfjRMjR7ZOQf6cz+Iu3Fu5iLZQnMkyC72idwuhZLdT1180zZJ6E
X3tsEwZttLD+xPVIEa5JsNuSDlpQ1kI3io7K2IFJWFyjXb0iq4V06Xt+PTw4
CbYCcrdnxLVQlebNGTrBSTjmrl3sfVALPzaQNEYlJsGb2ZF94a8mlplp0yVq
TMKFdckdJ8o0MUr/XQSP9iREVBg1rL3URHv1owzPdCeB5pRbT3S2JtJK79pd
bjQJYuoqAYLxmmjE3rH3m/UkfN8r/J7XXRMPM2KKk90ktL1fW3K208TVbUUH
Zh0mYW+tj3eAsSY+Xkk4tOEyCbQ030ZpFTWR3GkpynNhEkRDFizqGTXxQ1Nj
QY7PJCTgjuTALQ2Mq1E4Lu43CfLnIow3VjRQppBbRuXKJFRzxo16ftPAm/Gj
J51uTsL2Q3Rru59qILeRu0nOw0nQyCrg5ZDUwAXN/m6x5Em4dmr7k22HNbDm
pI5lWeokFHl4Pmpl00B3cVG7hoxJsPk1Cn+/q2MJ06Ib+cUkeAW96FksUUeD
lkuBYlWTQDHTnTAhqGOITkRG6TQ1fpZjvs0Catjl6GEvOTsJOxXGE1U51FDw
kj5XAWUSNgvZ1Kpo1bA5i+3B0+VJUN75vKCFpIqcf9IjEzYmIV57V6thpio+
f1V+wZd5Cir5Y1aj+VSxk52sJCY3BYs0PtaOooj8R1vW8xSmwPfnH603BxAv
wesyAaUpaGN1LOHcjcjtFXD8AE7BFYV2RiUioFs9jQCj3hTsiNcvNfcGXL/C
xUh2mIIInUvq1xNU8PCI3renEVPwpCNbM2lDGe/UKr2xiJqCuyJDyxeIyvg9
Tyxyx90pkJMs87nUoIy1fswy5+9NgddP9p0cD5TRjaErXurxFHCp/7t9U0IZ
n0vbaH8qnIKA70+XFi8oocSds+WjQ1OQHDbgQ79bEZN8rGPvjU6BbL8Go9H6
CfxnruumRpoC9vZN16qJE9jJd4w9d3oKWDnui7N/OIEXyxYvXFiZAgZC1WTw
+RNYSrwktLl9Gux3qwYd6VZARfnwRC6paRATqqiZ/SCPfS5ccuky0xDM5VCb
ViCP/nGv+w/JTwMja7mOZ7o8Fkx94xZRnoZ0t6ij5iHyeDBRPEtOaxqYmq9r
OmrII+1K3ysz22monI3tE+qWw5b8o42xYdNgaG/G50Erhx59VR5sEdOQ6Et3
l/uXLNLTmjM+vD0NznmS0eOzsqhic8MwLWYaypas3xd/lcXCHd3d+UnTYHDt
0znjbFlMdLtObMyfBvrvlXLu2rJof7Dj97buaaji/S9CLlMGmbn8yj70TsNe
87Ci+Icy+Iljz8VL36bhfimP6NYdGRTeaUcmj0zDZMVWLPdlGVz6Md3XQZ6G
CPbMvUaGMhj2ZaskfWsaHonv1Y/+J40ydVk+Vttm4NDq72LRX9I4U6VxjI1+
BnItD7aOzUujQemd7PCdMxC57+bb8EFp3JOx9/55zhlgiz+z7225ND4PkPA+
IToDF7396Qv8pNHW5+vRH2IzQFhjennDUxp3ewZMFRyfAel9059cXaTR73SF
/SHZGehi8/njZiqNSnpa+jtwBqw1+ZtUpaWp+5GjSK/FDCSzF9NbrUvhz+bY
cd+bM2BzdTr3frwUDu/q9di8NQO0J09x/omWwloDnqXbkTNQ7z4u6h8uhffa
8/88uTsDi5UZCvFXpVC0q5Gz7eEMuLDa8F92k0LHgW3aR/NnYC16gnFDWQo1
uHXbSgtmoMAuQlZfQQqP2d0zwzczEEsXXpQvLYXrwwedrEpn4PGBkbhEUSlM
ICpdjaiagbxHu0M5uKSwYebSS1LXDNh+7an+sE7AApGPhAu9MxD68d7D5VUC
PjhH/269fwYEb/clSq8Q0ImSUMcyMgObw+Tdk7ME3Fh8M3JyZgYeCf6dWBwi
IPH4muuX2Rl4mtC+lfiNgI2+KnPm8zPQtjirpttLwMTvrb/Or8yA6WKV7nA7
AY//mmVJ/TMDOS/zLhTUEnCvPCFJaItqjzVk4XM1ATevBPIU0ZCBQdkyc7aS
gM2/tx9t+o8Mg06fXpx+S0C3vwJqv1jIEGByIOtXAQH1VM433WQng8CnH0yh
+QQkhBQb7d5DhuDcrvp9zwm4RaNqJ8hNBjWtNgm/pwRMpncMMBUkw04xHuvu
VOq56z7Zr8JkcLLrTh9Ipn7/c+fPU0fJsMgbV7+QREDJMPUrhhJkyD5m3gEP
CJhE2pRvlSRDAVdAZfB9qr9Yvq4nTYYjsC37SzwBm/6JXNNRIMNV0zDfuzEE
lDg9rtioSIa2pe/u2+5S81H1+I/mSTJ8cW72jYim5jeYOVhdjQyiM9FDbyMJ
2DDceLJWgwy3zhrpu0cQUEz55hZqk6GjX2qeP5yAaxs/QlQMyEBfsUlsuElA
e9tX+NGI6r8Xv+brUALWvnffpmxChv96yBtPQwgownWotsKMDIFmRMbnNwgY
FzgQdsKSDJH+DcEVwQRc7U9Qf2dNhrHtkfZD1wloK29AL29Hhj1G8oWMVCz8
qypCxokMexVLhxOvETDGIlCrxIXqv6B689JVAn4vJeyQOkMGvoeFFjZUbM1J
aSw8Swauk3+ivwYSsMo/J+q4Jxly0MLPmooFux10X3uRocldkHvxCgHvSO1j
FPchg6M+bWwCFS/f72x+eZFar/uVfZpUbLkSfVc0gBrPHgs6BiquNFY3eHGZ
DIRDtHwDlwnIX7jJJHKVDBtpEnLvqTiKpbwtN4gM0XrXLJ5T8aK3T5zQDTK8
XnkfnUvF5u0ip3JCySCbujZWQsUV4uMsArfIkFbjd6aTig/FPu7MiiDD+ZjM
I5tUHDFvfv9QFBlWt4vJyFPtz+kzm2bcIcNz0s/km1Rs/LKR/WAsGYo6tNyG
qLic8WZ3WjwZuHu9nmlQ4+XxVEw8kECGT6f4vD5ScdiXH+apiWRg+mjWpEnN
F1nk1R6uR2TQoVVpHqFioyj3vkcpZHhRZhwWQc136Qzfo71pZGD1OLntZBAB
ubUHrB4+IcPNpVUremp9QnMT9nNmUe8X5z36f/2m/zMYSHhKhtHv9V9rqfU1
OPNfKlsuGaJ4aPZXUOtfXFdle+85GVJYta9/ovbHfsHAAywvyRAU0Mo6QO2f
yfG5NKZCMgy3P+E8cYvKL7Uch7vFZHhT8PDFTWr/FWY5HGQsI8Pfc3wVg9T+
vO7UmbGjggybhznTqqIIyDFalk1bR4aRTdXnp6h8iGMKDn7bQAYNgrKFFpUv
jEoa1l5fyLCyg17ahMon2uSu3X3tZPB6VrX+9BEBbzSkkO98pfaHbh7vfAp1
3qw6fYYeMpim6S3opFH7zWQp8MUAGQR9g3epZhHQO7TczHGYDJxRkanDVH7P
vQ6W4BgjQ8+AikVsLgFJu5gmr0+SoargSbcEdV501oucMl4ig4FywcdL76j5
WV06+t93Mrh3Cl6u+kDlL/9b+opVMrzkaQvipc6j6hDNCoENMkC5DQtfAwFf
n3ARWqOfhVc3zgzJUOebqMdRmoIds/CxPTpYZoCAuUnLg06Ms3BQcahSf4SA
6T9u3GtmmYWw8Nn6T1NU/rx6/CedexZKrjXs+LpGQIZhlz5T3ln4nTCfkrBJ
wHBG0aIdh2Zh7Sed9oVtUhh09p37RaFZuDBZ2eS9Swo9D/d+1ZCcBdqVIr/n
h6Rw+lRawW+pWRh+82ZMQVgKXW643n4tOwu2J7xEJo9Joc3QivJ+pVnwi/ir
FCMvhToPmZ9TNGehRyCU76ixFNZ97g3L1JkF/GXG9chSCvF7moOFPvVc4/vU
YQcplD91jKPaeBboHnXsi/eUor7XOjcS7GZh4T73ekekFP4XfNP8xMVZMDrA
Pna8XgpLV+Z/V/vPwoRh2Y+tVil0c7fO0LpM9bc435/SQ7V36vicWdAsyNbt
neGdksJw/pEQ74hZOLy1HLmyXRrpmxRePk2ZhX5D+adPjKWxVDnHWDRtFk6W
jRact5VGtyKWX4VPZmFAuSbRzk0a61KnserpLKiuP414FiiNty4k9n17NQsQ
9uDKQrY00nIsb2OunQXFgyVPireksfi2XV5i3Sx8nl+6RWKUoe6DDQYHGmeB
fSLmvuI+GaydSn8k0joL/0mUnrwgSdUf7/TF1ftmwTG97cekmwxuc8yzDpyj
+jfZbZfXJ4OFXexbW/PU+y6mzDVTMuikfeNpxNIslFoMU5h+ymCNpMViwuos
uNKSVbU4ZTGUji781RY1HnXxIkMLWaR54fhmnH0OjBavn7owLosN8/3eGXvm
wJXG2vkTVY/FSJpI2O+fg8sdZ6Ncd8nhvnfqr3p556BOVTfukawcSjSKvGwS
mQOumlHF6Vg5XGXM9ow4NgexfW8/duXIYYXRAVE1iTm4Esopz1Uph5p9u198
kJ6DMLMrLRUUObSf+p77WmUOrlPazcJOyVP1uJf7edU58HNy3+d7Th7JXlNC
IhpzwDzhmdhwi6o/V/tzsnTnID5XWqj8vTzeofuYnWg+B9Ne0ZQRUQV8f/j2
k2uec1Ab9zo2WPAE3jhD4yh/YQ4a1q5a7tM6gRovrvKu+swB5wHzHnUPqj6W
9Eq7cGkOfirWZ7u8PoFkMEl1Cp2Dxaq4Pbxqivj6VrMN7605MJPCvCIPRQxo
VOcajJgDyXU13bV4RfxnJJdsdncOxD6uJuYRFXGv44EkraQ5kJrhlD58VwmH
sxIt6FLmYHTT41HtWyXMntq9p+bxHMiw1m0qTymh+AWaxBNZc+B+UtCiR00Z
Na5P3RcrmIMswyR92HkS/VLfxLLXzgHNWg3p+hcVfLuZeru2bg7S/iW/G/oP
cNMx8qZf4xxs5D1Rj1QHvC3gcKmrdQ7kbPz3ztYCphUwOiT0zwGdoa3kw3OI
JOZflmqDc7C1415sYiyi8EWS8ffhOaqeHeE/X4xYKPtOw3R8Dsa9rmDlFmJ9
1Rkx9oU5iALXvoFsVWQ8bCJcu0TtB4btr4LaVdH4lvIhv+9z0Pk2PV75jyoO
anNwdq3NQUxNJ62utRoudtb8uU9LgbqpQwxLh9VRWrrgp+p/FGCy325NtlLH
wIePllZ2UMD+Qw+Ld7w60tl6T5jspkBDSbPfGToN3D9xoIVtPwXoN4deyW7T
RAfNHfWfuClQWtfN91FTE7Pzvldd5KVAQK/oWEiMJop5fSn+yk+B6AubNWKH
tfBie2nBTSEKOOwQGLb00cJyycxcgggFjpm3pCvXUPf3n5dT74tTQGZEzKnP
UxsjrVwSVSUp8PuiU9hYnTa2vjeMW5GiwKmze4+f4tdByxuCYSYKFLDITVuS
Juug546uc2zqVPvngwl9uXr45txH10+aFFAT0P/vE78+rrY8d7ioQwFdVYUi
zNHHkHshJl8NqfYkD1xIf2+Add899W8aUyDxztE9bkaGyGhhqUkwo8D0hojf
wzlDTOQSP3HfmgKS/1VGpSudwoGg/dKqdhTILmF89XXlFB4cpRNfcaBApier
+H4bY3TFJeEsJwrYHj0S2FFljM+zBw+ZuFLA+/D4qXhRE1ygb+De5k6BJ8Pa
TuQ0E5Q6W8RZ5EGBWM0U4Rt7TfHjsSgGNm8KyK/t3u7Ib4ZyPfvaEnwpsP2g
g49wgRkWXs+7z+lPjbeFI1gdzPGokLxl0iWqvWeu10uGzTG7rYF7fyAFmu90
PU+JsECey5ZjKdcoID2a8Z+mkiU+PDj99EAwBbb1Ld5V+GeJUT7/ifOFUWCn
/897Wu+tcdv+hyuZ4RQ4wRJx5WuJDV6rESznv02tX3uJcl69La56lF7LiabA
7rZBL57vdniBTQOEYyiwXtDEKnTSAaffd9M9j6NA6+gZ9isvHdHJxbXp6H0K
5N+x87M57IQDjD9iXj6gAC/sKvpC74ymJWEm4kkU2BhfdWald8EWO/a9b5Ip
YNIiqr4s4Ioa9NmDko8pEBNeOrl2zg2rCggZxekUSHZIz/IdPoPyFp9cZTIp
oHRfKeC/sLNY+NdYpDybAncs98y3O51D0VzivPwzCoSI256RvH4enxr5Fr3P
o4Ccy4B5TOcF5Fn7d0kpnwKH9HKLxoR8MSkjXvFjAQUeN3B91nC+iCw6fP9U
3lCA56kKeXuAH0Ytv/5cU0SBZ+mZDB9F/ZE2RSVKrZQC7RmR+5is/TFItd2g
rpwCOqJHtYSX/HB11oFN6z0FJCRfXHnG5IfeCQu9jR8ocNT1dvK9CV+cUQxO
1a2iADs98RVRywedJphOt9RQoKYoOsmz3wsH76YJGH6mQPnRFfabyZ5oJiNG
bq+n5oeN1UbroQe2Dn8oMG6ixmsTrNbZ5o5aEfoXu5opkKNoFqpx8gxWiw/J
mrdRYGrq+1f+EVdU6PPc6O2ggCtmtvTmumDxjY0qqy4KvEi5zmqb6IzHjty5
NdBDgdokDRf/TCfM6eDSseunwL997N/tY0/jwcAXTCMDFNh/Z4/74+2O+OjQ
ia+OwxSIYpmUPp1rj6xfmh4SRylwuVl45vxZO7xz0drWhUQBqdOXzjhq2iId
N/ng5AQFegpcmiOVbfB67ZWJM9MUmJVevt+ka40/PXc8nyFTgObf1fxQTyv0
5njkdY5CAaOUAxq+aZZI/iBMoCxQ4z009eTliAU6u5X/9FqmwK6lbI4YMQsc
ZNKqWPxOtRcYU5tz2xzNy3pv+P6kzrOfT8XeL5ih1vafOwI2KMBffdL3RZ8p
1rwOb/25SbUnaJZfY2WKJ6w471/5RwHSDpZ5JJqg2HNp7iD6eUj7YW74h94E
nxl/Ht3cPg91654fDmUa48Hfpk9v7JwHbztJwZtojGx6fmJhzPOQ9H0++d3B
U5j5iWWXIts8vP1Pd6zJywglT7yaXeGYh1/x1u6tnw3RSISc68w1D4I7BXy2
3zHAkYyICC6eeRD9sHCYY10fvfYJuH09OA+XL+2g+eClj3e2Ox5WFZwHp4fH
gvZ66CHXjT//1oXnQUdLbDvNoi4+/5k8Wnh0Hj47t1QvBupi42T340PH52HC
97BoZpoO0n/W3UujOA8OkrGX6Tm18YHizOpb5XnqPqtXklChhfzF4d0+MA/t
Z3zzlNy0ELOq741pzMPL8O3d8jWa2LHfweeR9jwsPhgUAT9NdLy3YXhKbx6O
cn1ZbRLWxOAQ2V3Vp+ahZjVMYSZJA5nWumYvm86DUF2pkpqpBqZ5+zZJWMyD
61W8VcCigRUOLyOe2M4DT6Kr1Kl76vhL6TDNjTPzsP389pCgXDWMKKkalfWY
B5XiX6QfPmrIecz+44LnPETlmhwfUVRDae5H1xx850E65elYQ48q+q4z/VQO
mgej6hf6t/ap4j+f/O7V4HkQ+7zxZwcFMW5Gu7ggdB7mhfvCU6oRC/rCfHgi
5+G60qBO5XnE2dL12T/35mEhSq9y7xPAQLGkppIH1HpcMqraMANkyJHOO59E
zc/zmjT/XYDCD7zdhh7PgzyK2yzdUEGXi5OjFbnU+tsxCHy8fBKHxTu7r1bO
QxX7S8+STCXMoLAF01XPw/AD9WYDbyV0eWEmHPtpHjz2bgRWKSvhrGB/YGbD
POy4+WiFc1gRfx0Y5W3snIfXeeJf/wooIhvj/FnOqXnIEvS+1dijgD2N4mxP
ZuYh23XP6otXCpgc4VNxZI7qn/OVtYO3FfDgth9MSkvzoHrrbF+JkgKKrf8u
cv5Njd93Ilv6pTxqTe/YfL17Aa5tEDaPZMnhzhzdZwqsCxC1f6Fp5KYctjrf
NaplX4BZnVGOTRc5NBthzurdtwDEPccXzgnLoVPPHq3NwwuwbS2zuKdIFoNq
Be7pyi3AKPNPPacBGVQJPXOiW2EB2oOzKJ+rZZBWJW/cXmkB/DYU/gXkymDU
e1FZX1yAHA9H0YoAGUwqJAwm6S2A+6hxYgEnVV8/AcFJxwUoHfJeOeYsjT+u
/djh7LwA/l4SOmggjXJWeZQR1wXgiLFIjZWXxg8sLCX9HgvgUHCisoNZGhtC
R1Vb/BZAhYu5erBaCodcgk8XRy5AAte93aep+9FBIKgfj14At/wG5hwuKXQ6
MCVccHcBfjcGcuxloO5X3QaLz+4twNM3ajk3qPvbsgZPcErqAkim3d5jkk3A
7Uc+pIa+XoCC7crLNwQIqEvnc+Nv4QKcr/U/c4qTuu+N8btcK1kA2t2Wkhr/
EZAt+c7RgHcLsHRnfil5RhJ5dtq+O1tLtb83NXn8lSRKUdZ7jfoWQIZTyCcV
JdHhjRwb79YCePzRbBZcl8By23XmTppFmL3BEuQ1JoHM2yuYbtEtgme24vJi
gwTW2J9kmGVYhFD77pCsJAnkZ9T4V8qxCMYtuawvFSRw2s1kweDoIkTeN9vf
GCmOKqwclH/HFmGLtUPX96I4PvrQQy6WWIRnp/zf6tmLow679eR+mUWIXRLG
+1LimF/tODSpsgjRCmviViQx9Ob2+nLdfBFqErO9HbTFsKFevPG41SJ8Dpzm
+l8AJAPb/OE0LEAfce/E4lnuP3XohK2OIixA0MdywEhf7j+/YfL3Zf4rQDJ1
ebcUau4/WmbdbPq3K0D3z4alrH/uP9EL4xdpMitAgIWhgdyq7j9NHU/XE0Iq
QA13B0phre4/aj/JuBY1KkCaaG0S5q/uPz6mHjY1KCpAs0s5o++07j/2Sn4z
xA4qQOYR0cQCv+4/2rAMqyTdKUBLngAIKdPuP18WtMXFfilA2I9m0K3V7j+e
xwtxa3MpQGSBzJgy2O4/tLwVxCloKUB+ZJgpPN3uP1ofybnvUSlAsCowS0/n
7j8gEcpynCYpQBa3X451++4/RqxO6lbUKECjqMVW+v3uPzL8d3d0yihAMJor
H38A7z8UvpVGqMAoQEl996+IBe8/nO36IVKtKEB8Q4/Rmw/vPzwh6yOrhyhA
4s++FMIj7z9YYb84VkAoQK3oHZsOTO8/CEtZSMTAJ0CInYVg3k7vP5XuRLKV
uCdAZFLtJa5R7z9J0CdffrAnQBy8vLBNV+8/wLyHAJWgJ0CKj1vGjGLvPypi
svbTgSdAaDaZ8Qp57z9keUbLfkgnQETrALfae+8/TLmvNLZBJ0AfoGh8qn7v
PxDPBQ8DOydA1gk4B0qE7z+KLnmw3C0nQEXd1hyJj+8/LPng7YwUJ0AihBRI
B6bvP7EuI4/M5SZA/jh8Ddeo7z85umq2T+AmQNnt49Kmq+8/U4yh2ubaJkCQ
V7NdRrHvPxRtqshQ0CZA/ypSc4W87z+Ya54REbwmQNrfuThVv+8//r319DG3
JkC2lCH+JMLvP6dKtDlmsiZAbv7wiMTH7z+nUZueCKkmQNzRj54D0+8/R8nv
5jKXJkC4hvdj09XvP+qqneTskiZAlDtfKaPY7z8pQhG5uY4mQEulLrRC3u8/
GfV5pouGJkC6eM3JgenvP+sMmOEOdyZAli01j1Hs7z/bARjiXXMmQHHinFQh
7+8/Pae8P79vJkAoTGzfwPTvP1iw+9m4aCZABAHUpJD37z8iu+r6UGUmQOC1
O2pg+u8/YG+nQfthJkC8aqMvMP3vP3Ay7KC3XiZAlx8L9f//7z9qv6wLhlsm
QAdyuFI=
       "]]},
     Annotation[#, "Charting`Private`Tag$15736#1"]& ], {}, 
    TagBox[
     {RGBColor[0.560181, 0.691569, 0.194885], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
Ii9wvpxk+11HNVug4TknsoDEzKkt+i0wXL8L5V95GpXx1bwFUtkPoL5TKls6
y+1aYG2M6mJ+vX3BHnqqBYKHxNA/qt1jXoIhLcDO/wnPxxyHoIe0Gy2gso+O
56fAl7X9eQktMN21gOdt6Pk8nvP3WiDsjT7ytyX7D+zNawGqfx+e37aRPf6c
z1ugeNsb5CYBz6edb1pA9hk79le9t4J+t6kFKqrvI+dsS1vn1tUC34tCFuWV
Khoo0VpAQOEG6hOq2RC8MNEC7/UK8Xz+3mBXUve7BR64MfB8Lsid89Fd0gqy
rgJo38ev2tFPV7SCe5Qq2i/6X+wjPq5WYE85gP4xuzDw1m9NKwg0bEf/3Xgt
PTggQIynjSPP6L7mzdnUCgPpDYv7b4e5jpdsKzx0rUZOE7pn37WzFRqeOSJ3
2E4EqO1qBUOWBhzPmb0r4Z5aK9hemUF5+z5dLlixrxX+2zmN+vjLNTec0mmF
0pq3qG+BtxCz1YCQ33QG4yG6kC90x7IVyhLD0X7z/XOKLMdaIfP9avRPZLi2
0QmHVlitn4P+rf5wy6XhZCtoKzphfTXLO3B5x+lWqIi0xHrMOc37+ez5VuD+
pYH1W4cUx8Tby61wJOYFMudp8xVbw1uBP8sa++8ryhCLutkK1z8L43z+vz+r
/ohtBb+fP5AL1HaZWyW1QpNMC8r/GHL5zKu0VjjUn4HxFK39cF08qxVS9I6h
vuZcQtnXclqh7+mfRf0POVVOPGmFb/vPon1/+v58Ly1rhW6ZTmQX51tSIW9b
IcbUB/nu4/69o3WtoMj+F8dTp6Rs9JtbweO8DfIqZW/fAkorLPmYjPK1Aipj
1va0QsJkJeoXUMX++MJgK/gHdKH+RcvNa4borZDYt1ivjullDGl9aoVTtaLI
G2M+zz6abAUZ97PoH1tFPusXM60g5jSE9XIqVbWsaWkbiJ26he17cppPdq5s
g9M3dHB8r7/DukGuNoh8tAnlCYpE+H4VaINB4QXU5/mkiOTMhjYI56CjvhZV
hZ0sm9rATrkQ7fl168BVdkli/uu2aP9txx4l3m1t0N1GQ+5YsSR+839tQJG3
xvXAmyv9QwnaIP7PLLYXBrzMVNdqg4KRC8gmhiam2rptsKDZiPNPiTKWGBu1
wbTAN5QfPXW+0PJwG6hHTKN+ctWc9nZWbaD5fQj1b467y+N6rA3eDr1G+06f
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
pO0K+2BamfaSZIkf6qInSgn7G0/NkXyx8j2f24s+mM//SSGZet2Y/UxVH5Sp
hnWRLGfeveBdQ8y3SXXZH4KvidlP+zX0wcGoNUVk+/DnT58utvSBWEqXLNmu
8txr6HJHH/hdn3xItt+6PNdxrYfwp+0lPrJ93DC0IXKwD8YCPzaS7fuFVlXd
ohPx1W7/RXIq43ZJwlgfMCoT1cj+0/mij+98IfLHqwr1NQx4mJHxvQ+qPnij
vg+05RPu/+4DJaNnUmT/hTXlN3LnCf3jbsyS7ZYDe0Pyl/RDN+VkNskFOQ2+
xSv6wWqUMUkyu89h93LOfpjnv8gg2QH67St5+mG6/7sTyRUcJyzfru2HsaDg
SFwf1C8Gdev7wc/WPINk93u++z5s7IeY4aucJL9z/7erXaIfXIJCcT2JqIRv
79raD/x3G7hI9l22ZnO/XD90vIr7TeZ/S3Oy4IhiP7RyWuF6l04R5x5V6QfZ
uBv4+5/gE4+XfVbvBzYze9y/euSVZr/u64cCiQE8zxTmX05O6xDj2wztSY6o
PcCYNegHpZ5yfaxXYpt7Fg4R9iS/vYD7oa1lyzLLfhCrk8TfD93eOvyOzaYf
wh9o4/4wOe1Sscq+H5LyHpzC+qHqWz6vcz/klIhcI/nujQv3153qh2FWDTwv
ZiyW3RH27AcVtwP1JJuIR8ZsOkfMV935heRHX/jDJC/0g/x+HV7S/qXlaQHb
goh4aBTi+jwaKnlWPrQfqoLMD5NcbJzv/N91Ynz2W3eSuTao2KhGEfoozwSR
fGK06hDEEfFg98R4VBbq6mglEfFk3RZLssDFdjXdNML/Ehm3SD5z8KiCUWY/
sIwcMia5jo8hdfhhPxw0bcT9YtOQu4hVXj/U7XiA8i/k/uQ9Vkj4t4bFiOT2
c5fYHEr7IY9fay/J2/auXHB+0Q9l1Ed7MJ9yH0t1V/WD3cAqNZKV+E0O6b4n
5DUbqJBcdnH6QkVjP2RHG8qTrPYxKXtbWz9olZVIkVxlot6cSu0Htbm3m0g+
UDHye1V/PzTl/v1F+q9hc9imoJF+MDs3tZxsN7opoz81SvijUw37t/9q9rGf
IOLxun035rudd3r7t34wuWeF+vXXr6vb/5uwx31sC8l2ii+/Fc8T/tsVz437
d6rdBsmlA9CkFbSUZNcVyw8krhwAHmY1yps888iDbdUAVBlG4f7v1WOY5M9L
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
       "]]},
     Annotation[#, "Charting`Private`Tag$15736#3"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  BaseStyle->{FontFamily -> "Arial"},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.8916011743226633`*^9},
 CellLabel->"Out[26]=",ExpressionUUID->"11757a9c-5018-4704-bc01-4f35fc88baad"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"data", "[", "\"\<Equations\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.891601221349519*^9, 3.891601221353077*^9}},
 CellLabel->"In[27]:=",ExpressionUUID->"3f09f2cb-e045-40e5-8c3c-2a6351115160"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{
     SuperscriptBox[
      SubscriptBox["\[FormalQ]", "1"], "\[Prime]\[Prime]",
      MultilineFunction->None], "[", "\[FormalT]", "]"}], "\[Equal]", 
    RowBox[{
     RowBox[{"-", 
      FractionBox[
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SubscriptBox["\[FormalQ]", "1"], "[", "\[FormalT]", "]"}], "-", 
          RowBox[{
           SubscriptBox["\[FormalQ]", "2"], "[", "\[FormalT]", "]"}]}], 
         ")"}]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             SubscriptBox["\[FormalQ]", "1"], "[", "\[FormalT]", "]"}], "-", 
            RowBox[{
             SubscriptBox["\[FormalQ]", "2"], "[", "\[FormalT]", "]"}]}], 
           ")"}], ".", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             SubscriptBox["\[FormalQ]", "1"], "[", "\[FormalT]", "]"}], "-", 
            RowBox[{
             SubscriptBox["\[FormalQ]", "2"], "[", "\[FormalT]", "]"}]}], 
           ")"}]}], ")"}], 
        RowBox[{"3", "/", "2"}]]]}], "-", 
     FractionBox[
      RowBox[{"3", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          SubscriptBox["\[FormalQ]", "1"], "[", "\[FormalT]", "]"}], "-", 
         RowBox[{
          SubscriptBox["\[FormalQ]", "3"], "[", "\[FormalT]", "]"}]}], 
        ")"}]}], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SubscriptBox["\[FormalQ]", "1"], "[", "\[FormalT]", "]"}], "-", 
           RowBox[{
            SubscriptBox["\[FormalQ]", "3"], "[", "\[FormalT]", "]"}]}], 
          ")"}], ".", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SubscriptBox["\[FormalQ]", "1"], "[", "\[FormalT]", "]"}], "-", 
           RowBox[{
            SubscriptBox["\[FormalQ]", "3"], "[", "\[FormalT]", "]"}]}], 
          ")"}]}], ")"}], 
       RowBox[{"3", "/", "2"}]]], "-", 
     FractionBox[
      RowBox[{"4", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          SubscriptBox["\[FormalQ]", "1"], "[", "\[FormalT]", "]"}], "-", 
         RowBox[{
          SubscriptBox["\[FormalQ]", "4"], "[", "\[FormalT]", "]"}]}], 
        ")"}]}], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SubscriptBox["\[FormalQ]", "1"], "[", "\[FormalT]", "]"}], "-", 
           RowBox[{
            SubscriptBox["\[FormalQ]", "4"], "[", "\[FormalT]", "]"}]}], 
          ")"}], ".", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SubscriptBox["\[FormalQ]", "1"], "[", "\[FormalT]", "]"}], "-", 
           RowBox[{
            SubscriptBox["\[FormalQ]", "4"], "[", "\[FormalT]", "]"}]}], 
          ")"}]}], ")"}], 
       RowBox[{"3", "/", "2"}]]]}]}], ",", 
   RowBox[{
    RowBox[{"2", " ", 
     RowBox[{
      SuperscriptBox[
       SubscriptBox["\[FormalQ]", "2"], "\[Prime]\[Prime]",
       MultilineFunction->None], "[", "\[FormalT]", "]"}]}], "\[Equal]", 
    RowBox[{
     RowBox[{"-", 
      FractionBox[
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           RowBox[{
            SubscriptBox["\[FormalQ]", "1"], "[", "\[FormalT]", "]"}]}], "+", 
          
          RowBox[{
           SubscriptBox["\[FormalQ]", "2"], "[", "\[FormalT]", "]"}]}], 
         ")"}]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             RowBox[{
              SubscriptBox["\[FormalQ]", "1"], "[", "\[FormalT]", "]"}]}], 
            "+", 
            RowBox[{
             SubscriptBox["\[FormalQ]", "2"], "[", "\[FormalT]", "]"}]}], 
           ")"}], ".", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             RowBox[{
              SubscriptBox["\[FormalQ]", "1"], "[", "\[FormalT]", "]"}]}], 
            "+", 
            RowBox[{
             SubscriptBox["\[FormalQ]", "2"], "[", "\[FormalT]", "]"}]}], 
           ")"}]}], ")"}], 
        RowBox[{"3", "/", "2"}]]]}], "-", 
     FractionBox[
      RowBox[{"6", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          SubscriptBox["\[FormalQ]", "2"], "[", "\[FormalT]", "]"}], "-", 
         RowBox[{
          SubscriptBox["\[FormalQ]", "3"], "[", "\[FormalT]", "]"}]}], 
        ")"}]}], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SubscriptBox["\[FormalQ]", "2"], "[", "\[FormalT]", "]"}], "-", 
           RowBox[{
            SubscriptBox["\[FormalQ]", "3"], "[", "\[FormalT]", "]"}]}], 
          ")"}], ".", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SubscriptBox["\[FormalQ]", "2"], "[", "\[FormalT]", "]"}], "-", 
           RowBox[{
            SubscriptBox["\[FormalQ]", "3"], "[", "\[FormalT]", "]"}]}], 
          ")"}]}], ")"}], 
       RowBox[{"3", "/", "2"}]]], "-", 
     FractionBox[
      RowBox[{"8", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          SubscriptBox["\[FormalQ]", "2"], "[", "\[FormalT]", "]"}], "-", 
         RowBox[{
          SubscriptBox["\[FormalQ]", "4"], "[", "\[FormalT]", "]"}]}], 
        ")"}]}], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SubscriptBox["\[FormalQ]", "2"], "[", "\[FormalT]", "]"}], "-", 
           RowBox[{
            SubscriptBox["\[FormalQ]", "4"], "[", "\[FormalT]", "]"}]}], 
          ")"}], ".", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SubscriptBox["\[FormalQ]", "2"], "[", "\[FormalT]", "]"}], "-", 
           RowBox[{
            SubscriptBox["\[FormalQ]", "4"], "[", "\[FormalT]", "]"}]}], 
          ")"}]}], ")"}], 
       RowBox[{"3", "/", "2"}]]]}]}], ",", 
   RowBox[{
    RowBox[{"3", " ", 
     RowBox[{
      SuperscriptBox[
       SubscriptBox["\[FormalQ]", "3"], "\[Prime]\[Prime]",
       MultilineFunction->None], "[", "\[FormalT]", "]"}]}], "\[Equal]", 
    RowBox[{
     RowBox[{"-", 
      FractionBox[
       RowBox[{"3", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           RowBox[{
            SubscriptBox["\[FormalQ]", "1"], "[", "\[FormalT]", "]"}]}], "+", 
          
          RowBox[{
           SubscriptBox["\[FormalQ]", "3"], "[", "\[FormalT]", "]"}]}], 
         ")"}]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             RowBox[{
              SubscriptBox["\[FormalQ]", "1"], "[", "\[FormalT]", "]"}]}], 
            "+", 
            RowBox[{
             SubscriptBox["\[FormalQ]", "3"], "[", "\[FormalT]", "]"}]}], 
           ")"}], ".", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             RowBox[{
              SubscriptBox["\[FormalQ]", "1"], "[", "\[FormalT]", "]"}]}], 
            "+", 
            RowBox[{
             SubscriptBox["\[FormalQ]", "3"], "[", "\[FormalT]", "]"}]}], 
           ")"}]}], ")"}], 
        RowBox[{"3", "/", "2"}]]]}], "-", 
     FractionBox[
      RowBox[{"6", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{
           SubscriptBox["\[FormalQ]", "2"], "[", "\[FormalT]", "]"}]}], "+", 
         RowBox[{
          SubscriptBox["\[FormalQ]", "3"], "[", "\[FormalT]", "]"}]}], 
        ")"}]}], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            RowBox[{
             SubscriptBox["\[FormalQ]", "2"], "[", "\[FormalT]", "]"}]}], "+", 
           RowBox[{
            SubscriptBox["\[FormalQ]", "3"], "[", "\[FormalT]", "]"}]}], 
          ")"}], ".", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            RowBox[{
             SubscriptBox["\[FormalQ]", "2"], "[", "\[FormalT]", "]"}]}], "+", 
           RowBox[{
            SubscriptBox["\[FormalQ]", "3"], "[", "\[FormalT]", "]"}]}], 
          ")"}]}], ")"}], 
       RowBox[{"3", "/", "2"}]]], "-", 
     FractionBox[
      RowBox[{"12", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          SubscriptBox["\[FormalQ]", "3"], "[", "\[FormalT]", "]"}], "-", 
         RowBox[{
          SubscriptBox["\[FormalQ]", "4"], "[", "\[FormalT]", "]"}]}], 
        ")"}]}], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SubscriptBox["\[FormalQ]", "3"], "[", "\[FormalT]", "]"}], "-", 
           RowBox[{
            SubscriptBox["\[FormalQ]", "4"], "[", "\[FormalT]", "]"}]}], 
          ")"}], ".", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SubscriptBox["\[FormalQ]", "3"], "[", "\[FormalT]", "]"}], "-", 
           RowBox[{
            SubscriptBox["\[FormalQ]", "4"], "[", "\[FormalT]", "]"}]}], 
          ")"}]}], ")"}], 
       RowBox[{"3", "/", "2"}]]]}]}], ",", 
   RowBox[{
    RowBox[{"4", " ", 
     RowBox[{
      SuperscriptBox[
       SubscriptBox["\[FormalQ]", "4"], "\[Prime]\[Prime]",
       MultilineFunction->None], "[", "\[FormalT]", "]"}]}], "\[Equal]", 
    RowBox[{
     RowBox[{"-", 
      FractionBox[
       RowBox[{"4", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           RowBox[{
            SubscriptBox["\[FormalQ]", "1"], "[", "\[FormalT]", "]"}]}], "+", 
          
          RowBox[{
           SubscriptBox["\[FormalQ]", "4"], "[", "\[FormalT]", "]"}]}], 
         ")"}]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             RowBox[{
              SubscriptBox["\[FormalQ]", "1"], "[", "\[FormalT]", "]"}]}], 
            "+", 
            RowBox[{
             SubscriptBox["\[FormalQ]", "4"], "[", "\[FormalT]", "]"}]}], 
           ")"}], ".", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             RowBox[{
              SubscriptBox["\[FormalQ]", "1"], "[", "\[FormalT]", "]"}]}], 
            "+", 
            RowBox[{
             SubscriptBox["\[FormalQ]", "4"], "[", "\[FormalT]", "]"}]}], 
           ")"}]}], ")"}], 
        RowBox[{"3", "/", "2"}]]]}], "-", 
     FractionBox[
      RowBox[{"8", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{
           SubscriptBox["\[FormalQ]", "2"], "[", "\[FormalT]", "]"}]}], "+", 
         RowBox[{
          SubscriptBox["\[FormalQ]", "4"], "[", "\[FormalT]", "]"}]}], 
        ")"}]}], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            RowBox[{
             SubscriptBox["\[FormalQ]", "2"], "[", "\[FormalT]", "]"}]}], "+", 
           RowBox[{
            SubscriptBox["\[FormalQ]", "4"], "[", "\[FormalT]", "]"}]}], 
          ")"}], ".", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            RowBox[{
             SubscriptBox["\[FormalQ]", "2"], "[", "\[FormalT]", "]"}]}], "+", 
           RowBox[{
            SubscriptBox["\[FormalQ]", "4"], "[", "\[FormalT]", "]"}]}], 
          ")"}]}], ")"}], 
       RowBox[{"3", "/", "2"}]]], "-", 
     FractionBox[
      RowBox[{"12", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{
           SubscriptBox["\[FormalQ]", "3"], "[", "\[FormalT]", "]"}]}], "+", 
         RowBox[{
          SubscriptBox["\[FormalQ]", "4"], "[", "\[FormalT]", "]"}]}], 
        ")"}]}], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            RowBox[{
             SubscriptBox["\[FormalQ]", "3"], "[", "\[FormalT]", "]"}]}], "+", 
           RowBox[{
            SubscriptBox["\[FormalQ]", "4"], "[", "\[FormalT]", "]"}]}], 
          ")"}], ".", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            RowBox[{
             SubscriptBox["\[FormalQ]", "3"], "[", "\[FormalT]", "]"}]}], "+", 
           RowBox[{
            SubscriptBox["\[FormalQ]", "4"], "[", "\[FormalT]", "]"}]}], 
          ")"}]}], ")"}], 
       RowBox[{"3", "/", "2"}]]]}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.89160122279346*^9},
 CellLabel->"Out[27]=",ExpressionUUID->"6e166f01-0022-4ea6-8898-7029e420368e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"data", "[", "\"\<HamiltonEquations\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.891601229052005*^9, 3.891601229056072*^9}},
 CellLabel->"In[28]:=",ExpressionUUID->"4c4d4f07-5e2e-41f8-bac3-61c2ddd7fd8b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       SuperscriptBox[
        SubscriptBox["\[FormalP]", "1"], "\[Prime]",
        MultilineFunction->None], "[", "\[FormalT]", "]"}], "\[Equal]", 
      RowBox[{
       RowBox[{"-", 
        FractionBox[
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             SubscriptBox["\[FormalQ]", "1"], "[", "\[FormalT]", "]"}], "-", 
            RowBox[{
             SubscriptBox["\[FormalQ]", "2"], "[", "\[FormalT]", "]"}]}], 
           ")"}]}], 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               SubscriptBox["\[FormalQ]", "1"], "[", "\[FormalT]", "]"}], "-", 
              RowBox[{
               SubscriptBox["\[FormalQ]", "2"], "[", "\[FormalT]", "]"}]}], 
             ")"}], ".", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               SubscriptBox["\[FormalQ]", "1"], "[", "\[FormalT]", "]"}], "-", 
              RowBox[{
               SubscriptBox["\[FormalQ]", "2"], "[", "\[FormalT]", "]"}]}], 
             ")"}]}], ")"}], 
          RowBox[{"3", "/", "2"}]]]}], "-", 
       FractionBox[
        RowBox[{"3", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SubscriptBox["\[FormalQ]", "1"], "[", "\[FormalT]", "]"}], "-", 
           RowBox[{
            SubscriptBox["\[FormalQ]", "3"], "[", "\[FormalT]", "]"}]}], 
          ")"}]}], 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              SubscriptBox["\[FormalQ]", "1"], "[", "\[FormalT]", "]"}], "-", 
             
             RowBox[{
              SubscriptBox["\[FormalQ]", "3"], "[", "\[FormalT]", "]"}]}], 
            ")"}], ".", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              SubscriptBox["\[FormalQ]", "1"], "[", "\[FormalT]", "]"}], "-", 
             
             RowBox[{
              SubscriptBox["\[FormalQ]", "3"], "[", "\[FormalT]", "]"}]}], 
            ")"}]}], ")"}], 
         RowBox[{"3", "/", "2"}]]], "-", 
       FractionBox[
        RowBox[{"4", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SubscriptBox["\[FormalQ]", "1"], "[", "\[FormalT]", "]"}], "-", 
           RowBox[{
            SubscriptBox["\[FormalQ]", "4"], "[", "\[FormalT]", "]"}]}], 
          ")"}]}], 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              SubscriptBox["\[FormalQ]", "1"], "[", "\[FormalT]", "]"}], "-", 
             
             RowBox[{
              SubscriptBox["\[FormalQ]", "4"], "[", "\[FormalT]", "]"}]}], 
            ")"}], ".", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              SubscriptBox["\[FormalQ]", "1"], "[", "\[FormalT]", "]"}], "-", 
             
             RowBox[{
              SubscriptBox["\[FormalQ]", "4"], "[", "\[FormalT]", "]"}]}], 
            ")"}]}], ")"}], 
         RowBox[{"3", "/", "2"}]]]}]}], ",", 
     RowBox[{
      RowBox[{
       SuperscriptBox[
        SubscriptBox["\[FormalQ]", "1"], "\[Prime]",
        MultilineFunction->None], "[", "\[FormalT]", "]"}], "\[Equal]", 
      RowBox[{
       SubscriptBox["\[FormalP]", "1"], "[", "\[FormalT]", "]"}]}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       SuperscriptBox[
        SubscriptBox["\[FormalP]", "2"], "\[Prime]",
        MultilineFunction->None], "[", "\[FormalT]", "]"}], "\[Equal]", 
      RowBox[{
       RowBox[{"-", 
        FractionBox[
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             RowBox[{
              SubscriptBox["\[FormalQ]", "1"], "[", "\[FormalT]", "]"}]}], 
            "+", 
            RowBox[{
             SubscriptBox["\[FormalQ]", "2"], "[", "\[FormalT]", "]"}]}], 
           ")"}]}], 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               RowBox[{
                SubscriptBox["\[FormalQ]", "1"], "[", "\[FormalT]", "]"}]}], 
              "+", 
              RowBox[{
               SubscriptBox["\[FormalQ]", "2"], "[", "\[FormalT]", "]"}]}], 
             ")"}], ".", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               RowBox[{
                SubscriptBox["\[FormalQ]", "1"], "[", "\[FormalT]", "]"}]}], 
              "+", 
              RowBox[{
               SubscriptBox["\[FormalQ]", "2"], "[", "\[FormalT]", "]"}]}], 
             ")"}]}], ")"}], 
          RowBox[{"3", "/", "2"}]]]}], "-", 
       FractionBox[
        RowBox[{"6", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SubscriptBox["\[FormalQ]", "2"], "[", "\[FormalT]", "]"}], "-", 
           RowBox[{
            SubscriptBox["\[FormalQ]", "3"], "[", "\[FormalT]", "]"}]}], 
          ")"}]}], 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              SubscriptBox["\[FormalQ]", "2"], "[", "\[FormalT]", "]"}], "-", 
             
             RowBox[{
              SubscriptBox["\[FormalQ]", "3"], "[", "\[FormalT]", "]"}]}], 
            ")"}], ".", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              SubscriptBox["\[FormalQ]", "2"], "[", "\[FormalT]", "]"}], "-", 
             
             RowBox[{
              SubscriptBox["\[FormalQ]", "3"], "[", "\[FormalT]", "]"}]}], 
            ")"}]}], ")"}], 
         RowBox[{"3", "/", "2"}]]], "-", 
       FractionBox[
        RowBox[{"8", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SubscriptBox["\[FormalQ]", "2"], "[", "\[FormalT]", "]"}], "-", 
           RowBox[{
            SubscriptBox["\[FormalQ]", "4"], "[", "\[FormalT]", "]"}]}], 
          ")"}]}], 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              SubscriptBox["\[FormalQ]", "2"], "[", "\[FormalT]", "]"}], "-", 
             
             RowBox[{
              SubscriptBox["\[FormalQ]", "4"], "[", "\[FormalT]", "]"}]}], 
            ")"}], ".", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              SubscriptBox["\[FormalQ]", "2"], "[", "\[FormalT]", "]"}], "-", 
             
             RowBox[{
              SubscriptBox["\[FormalQ]", "4"], "[", "\[FormalT]", "]"}]}], 
            ")"}]}], ")"}], 
         RowBox[{"3", "/", "2"}]]]}]}], ",", 
     RowBox[{
      RowBox[{
       SuperscriptBox[
        SubscriptBox["\[FormalQ]", "2"], "\[Prime]",
        MultilineFunction->None], "[", "\[FormalT]", "]"}], "\[Equal]", 
      FractionBox[
       RowBox[{
        SubscriptBox["\[FormalP]", "2"], "[", "\[FormalT]", "]"}], "2"]}]}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       SuperscriptBox[
        SubscriptBox["\[FormalP]", "3"], "\[Prime]",
        MultilineFunction->None], "[", "\[FormalT]", "]"}], "\[Equal]", 
      RowBox[{
       RowBox[{"-", 
        FractionBox[
         RowBox[{"3", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             RowBox[{
              SubscriptBox["\[FormalQ]", "1"], "[", "\[FormalT]", "]"}]}], 
            "+", 
            RowBox[{
             SubscriptBox["\[FormalQ]", "3"], "[", "\[FormalT]", "]"}]}], 
           ")"}]}], 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               RowBox[{
                SubscriptBox["\[FormalQ]", "1"], "[", "\[FormalT]", "]"}]}], 
              "+", 
              RowBox[{
               SubscriptBox["\[FormalQ]", "3"], "[", "\[FormalT]", "]"}]}], 
             ")"}], ".", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               RowBox[{
                SubscriptBox["\[FormalQ]", "1"], "[", "\[FormalT]", "]"}]}], 
              "+", 
              RowBox[{
               SubscriptBox["\[FormalQ]", "3"], "[", "\[FormalT]", "]"}]}], 
             ")"}]}], ")"}], 
          RowBox[{"3", "/", "2"}]]]}], "-", 
       FractionBox[
        RowBox[{"6", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            RowBox[{
             SubscriptBox["\[FormalQ]", "2"], "[", "\[FormalT]", "]"}]}], "+", 
           RowBox[{
            SubscriptBox["\[FormalQ]", "3"], "[", "\[FormalT]", "]"}]}], 
          ")"}]}], 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", 
              RowBox[{
               SubscriptBox["\[FormalQ]", "2"], "[", "\[FormalT]", "]"}]}], 
             "+", 
             RowBox[{
              SubscriptBox["\[FormalQ]", "3"], "[", "\[FormalT]", "]"}]}], 
            ")"}], ".", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", 
              RowBox[{
               SubscriptBox["\[FormalQ]", "2"], "[", "\[FormalT]", "]"}]}], 
             "+", 
             RowBox[{
              SubscriptBox["\[FormalQ]", "3"], "[", "\[FormalT]", "]"}]}], 
            ")"}]}], ")"}], 
         RowBox[{"3", "/", "2"}]]], "-", 
       FractionBox[
        RowBox[{"12", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SubscriptBox["\[FormalQ]", "3"], "[", "\[FormalT]", "]"}], "-", 
           RowBox[{
            SubscriptBox["\[FormalQ]", "4"], "[", "\[FormalT]", "]"}]}], 
          ")"}]}], 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              SubscriptBox["\[FormalQ]", "3"], "[", "\[FormalT]", "]"}], "-", 
             
             RowBox[{
              SubscriptBox["\[FormalQ]", "4"], "[", "\[FormalT]", "]"}]}], 
            ")"}], ".", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              SubscriptBox["\[FormalQ]", "3"], "[", "\[FormalT]", "]"}], "-", 
             
             RowBox[{
              SubscriptBox["\[FormalQ]", "4"], "[", "\[FormalT]", "]"}]}], 
            ")"}]}], ")"}], 
         RowBox[{"3", "/", "2"}]]]}]}], ",", 
     RowBox[{
      RowBox[{
       SuperscriptBox[
        SubscriptBox["\[FormalQ]", "3"], "\[Prime]",
        MultilineFunction->None], "[", "\[FormalT]", "]"}], "\[Equal]", 
      FractionBox[
       RowBox[{
        SubscriptBox["\[FormalP]", "3"], "[", "\[FormalT]", "]"}], "3"]}]}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       SuperscriptBox[
        SubscriptBox["\[FormalP]", "4"], "\[Prime]",
        MultilineFunction->None], "[", "\[FormalT]", "]"}], "\[Equal]", 
      RowBox[{
       RowBox[{"-", 
        FractionBox[
         RowBox[{"4", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             RowBox[{
              SubscriptBox["\[FormalQ]", "1"], "[", "\[FormalT]", "]"}]}], 
            "+", 
            RowBox[{
             SubscriptBox["\[FormalQ]", "4"], "[", "\[FormalT]", "]"}]}], 
           ")"}]}], 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               RowBox[{
                SubscriptBox["\[FormalQ]", "1"], "[", "\[FormalT]", "]"}]}], 
              "+", 
              RowBox[{
               SubscriptBox["\[FormalQ]", "4"], "[", "\[FormalT]", "]"}]}], 
             ")"}], ".", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               RowBox[{
                SubscriptBox["\[FormalQ]", "1"], "[", "\[FormalT]", "]"}]}], 
              "+", 
              RowBox[{
               SubscriptBox["\[FormalQ]", "4"], "[", "\[FormalT]", "]"}]}], 
             ")"}]}], ")"}], 
          RowBox[{"3", "/", "2"}]]]}], "-", 
       FractionBox[
        RowBox[{"8", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            RowBox[{
             SubscriptBox["\[FormalQ]", "2"], "[", "\[FormalT]", "]"}]}], "+", 
           RowBox[{
            SubscriptBox["\[FormalQ]", "4"], "[", "\[FormalT]", "]"}]}], 
          ")"}]}], 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", 
              RowBox[{
               SubscriptBox["\[FormalQ]", "2"], "[", "\[FormalT]", "]"}]}], 
             "+", 
             RowBox[{
              SubscriptBox["\[FormalQ]", "4"], "[", "\[FormalT]", "]"}]}], 
            ")"}], ".", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", 
              RowBox[{
               SubscriptBox["\[FormalQ]", "2"], "[", "\[FormalT]", "]"}]}], 
             "+", 
             RowBox[{
              SubscriptBox["\[FormalQ]", "4"], "[", "\[FormalT]", "]"}]}], 
            ")"}]}], ")"}], 
         RowBox[{"3", "/", "2"}]]], "-", 
       FractionBox[
        RowBox[{"12", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            RowBox[{
             SubscriptBox["\[FormalQ]", "3"], "[", "\[FormalT]", "]"}]}], "+", 
           RowBox[{
            SubscriptBox["\[FormalQ]", "4"], "[", "\[FormalT]", "]"}]}], 
          ")"}]}], 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", 
              RowBox[{
               SubscriptBox["\[FormalQ]", "3"], "[", "\[FormalT]", "]"}]}], 
             "+", 
             RowBox[{
              SubscriptBox["\[FormalQ]", "4"], "[", "\[FormalT]", "]"}]}], 
            ")"}], ".", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", 
              RowBox[{
               SubscriptBox["\[FormalQ]", "3"], "[", "\[FormalT]", "]"}]}], 
             "+", 
             RowBox[{
              SubscriptBox["\[FormalQ]", "4"], "[", "\[FormalT]", "]"}]}], 
            ")"}]}], ")"}], 
         RowBox[{"3", "/", "2"}]]]}]}], ",", 
     RowBox[{
      RowBox[{
       SuperscriptBox[
        SubscriptBox["\[FormalQ]", "4"], "\[Prime]",
        MultilineFunction->None], "[", "\[FormalT]", "]"}], "\[Equal]", 
      FractionBox[
       RowBox[{
        SubscriptBox["\[FormalP]", "4"], "[", "\[FormalT]", "]"}], "4"]}]}], 
    "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.8916012304975357`*^9},
 CellLabel->"Out[28]=",ExpressionUUID->"f7605d9b-943b-4f33-80f8-408532e31915"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["User Defined Mass Position Velocity", "Section",
 CellChangeTimes->{{3.891601409523844*^9, 3.891601418700059*^9}, {
  3.891604010019944*^9, 
  3.891604015034554*^9}},ExpressionUUID->"8338ead2-c2d1-476b-a671-\
a282ff2e6e46"],

Cell[BoxData[
 RowBox[{
  RowBox[{"massPositionVelocity", "[", 
   RowBox[{"mass_", ",", "position_", ",", "velocity_"}], "]"}], ":=", " ", 
  "\[IndentingNewLine]", 
  RowBox[{"<|", 
   RowBox[{
    RowBox[{"\"\<Mass\>\"", "->", "mass"}], ",", 
    RowBox[{"\"\<Position\>\"", "->", "position"}], ",", 
    RowBox[{"\"\<Velocity\>\"", "->", "velocity"}]}], "|>"}]}]], "Input",
 CellChangeTimes->{{3.891600612117969*^9, 3.89160069472218*^9}, 
   3.891601408037015*^9},
 CellLabel->"In[29]:=",ExpressionUUID->"8d74aaed-b3db-4e05-b88f-d65c6535b4d5"]
}, Closed]],

Cell[CellGroupData[{

Cell["Timings For Increasing Number of Masses", "Section",
 CellChangeTimes->{{3.8916040176024647`*^9, 
  3.891604037170631*^9}},ExpressionUUID->"2fa387df-00cf-4d64-a576-\
8f8f31ced16c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"massPositionVelocity", "[", 
    RowBox[{
     RowBox[{"RandomReal", "[", 
      RowBox[{"{", 
       RowBox[{"1", ",", "100"}], "}"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"RandomReal", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "10"}], ",", "10"}], "}"}], "]"}], ",", 
       RowBox[{"RandomReal", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "10"}], ",", "10"}], "}"}], "]"}], ",", 
       RowBox[{"RandomReal", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "10"}], ",", "10"}], "}"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"RandomReal", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "10"}], ",", "10"}], "}"}], "]"}], ",", 
       RowBox[{"RandomReal", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "10"}], ",", "10"}], "}"}], "]"}], ",", 
       RowBox[{"RandomReal", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "10"}], ",", "10"}], "}"}], "]"}]}], "}"}]}], "]"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "1", ",", "10"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8916014424928637`*^9, 3.891601469434491*^9}, {
  3.89160151786021*^9, 3.891601533701355*^9}, {3.8916016903220453`*^9, 
  3.891601690705141*^9}, {3.891604391446926*^9, 
  3.891604392094728*^9}},ExpressionUUID->"131324f5-abf8-4cec-bd2d-\
58cd9013082b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"Mass\"\>", "\[Rule]", "1"}], ",", 
     RowBox[{"\<\"Position\"\>", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1.0260648868061075`"}], ",", "3.0339015631946964`", ",", 
        RowBox[{"-", "5.5474699781572525`"}]}], "}"}]}], ",", 
     RowBox[{"\<\"Velocity\"\>", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "3.2443129911251702`"}], ",", "9.82032467759474`", ",", 
        "9.648452995785298`"}], "}"}]}]}], "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"Mass\"\>", "\[Rule]", "1"}], ",", 
     RowBox[{"\<\"Position\"\>", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"2.3831091606797656`", ",", 
        RowBox[{"-", "2.2998849102290997`"}], ",", "6.8535476110413285`"}], 
       "}"}]}], ",", 
     RowBox[{"\<\"Velocity\"\>", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"6.297520456512686`", ",", 
        RowBox[{"-", "9.823867394915425`"}], ",", 
        RowBox[{"-", "9.796893178767835`"}]}], "}"}]}]}], 
    "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"Mass\"\>", "\[Rule]", "1"}], ",", 
     RowBox[{"\<\"Position\"\>", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "6.980709739813406`"}], ",", 
        RowBox[{"-", "2.5397185388539896`"}], ",", 
        RowBox[{"-", "3.21919825424359`"}]}], "}"}]}], ",", 
     RowBox[{"\<\"Velocity\"\>", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "7.94090538752565`"}], ",", "2.4358999625997697`", ",", 
        RowBox[{"-", "5.703526444874424`"}]}], "}"}]}]}], 
    "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"Mass\"\>", "\[Rule]", "1"}], ",", 
     RowBox[{"\<\"Position\"\>", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"2.4484274491288716`", ",", 
        RowBox[{"-", "7.155507068863063`"}], ",", "1.5517568826155248`"}], 
       "}"}]}], ",", 
     RowBox[{"\<\"Velocity\"\>", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "5.581782215485049`"}], ",", "0.7692509998569932`", ",", 
        "0.10041556186728329`"}], "}"}]}]}], "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"Mass\"\>", "\[Rule]", "1"}], ",", 
     RowBox[{"\<\"Position\"\>", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"9.427367890622016`", ",", "8.335201258667205`", ",", 
        RowBox[{"-", "3.6179937797011092`"}]}], "}"}]}], ",", 
     RowBox[{"\<\"Velocity\"\>", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "6.933452543640723`"}], ",", "5.5666858652268445`", ",", 
        
        RowBox[{"-", "4.228997195803359`"}]}], "}"}]}]}], 
    "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"Mass\"\>", "\[Rule]", "1"}], ",", 
     RowBox[{"\<\"Position\"\>", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "5.328617036003969`"}], ",", "4.2514022949956995`", ",", 
        "6.621025087760387`"}], "}"}]}], ",", 
     RowBox[{"\<\"Velocity\"\>", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0.9207878501651798`", ",", "8.218418726343629`", ",", 
        RowBox[{"-", "7.0254491495090505`"}]}], "}"}]}]}], 
    "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"Mass\"\>", "\[Rule]", "1"}], ",", 
     RowBox[{"\<\"Position\"\>", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0.3089581261606824`", ",", 
        RowBox[{"-", "2.1580690800680173`"}], ",", 
        RowBox[{"-", "1.6025987941331934`"}]}], "}"}]}], ",", 
     RowBox[{"\<\"Velocity\"\>", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "5.911784899322157`"}], ",", "6.497662807371292`", ",", 
        "7.816216501182048`"}], "}"}]}]}], "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"Mass\"\>", "\[Rule]", "1"}], ",", 
     RowBox[{"\<\"Position\"\>", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "8.889194870650297`"}], ",", "4.378435508084543`", ",", 
        "4.769430208743323`"}], "}"}]}], ",", 
     RowBox[{"\<\"Velocity\"\>", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "4.792188491513606`"}], ",", 
        RowBox[{"-", "5.479394727420292`"}], ",", "0.6569770791589811`"}], 
       "}"}]}]}], "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"Mass\"\>", "\[Rule]", "1"}], ",", 
     RowBox[{"\<\"Position\"\>", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0.5279797599381375`", ",", 
        RowBox[{"-", "1.079254830272788`"}], ",", 
        RowBox[{"-", "1.6127436191472597`"}]}], "}"}]}], ",", 
     RowBox[{"\<\"Velocity\"\>", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"4.059312222811776`", ",", 
        RowBox[{"-", "3.376233271233925`"}], ",", 
        RowBox[{"-", "0.3585805217091895`"}]}], "}"}]}]}], 
    "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"Mass\"\>", "\[Rule]", "1"}], ",", 
     RowBox[{"\<\"Position\"\>", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "9.091328243435761`"}], ",", "4.9471672604413754`", ",", 
        "8.533850862637692`"}], "}"}]}], ",", 
     RowBox[{"\<\"Velocity\"\>", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "6.2855481674478675`"}], ",", "1.4033780745764481`", ",",
         "6.773889023253858`"}], "}"}]}]}], "\[RightAssociation]"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.891601470000252*^9, 3.8916015369377823`*^9, 
  3.891601691187344*^9},
 CellLabel->"Out[41]=",ExpressionUUID->"7a695e1a-cb00-4438-9e58-e42c757fa225"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "data", "]"}], "\[IndentingNewLine]", 
 RowBox[{"data", "=", " ", 
  RowBox[{"ParallelTable", "[", 
   RowBox[{
    RowBox[{"Timing", "[", " ", 
     RowBox[{"NBodySimulation", "[", 
      RowBox[{"\"\<InverseSquare\>\"", ",", "\[IndentingNewLine]", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"massPositionVelocity", "[", 
          RowBox[{
           RowBox[{"RandomReal", "[", 
            RowBox[{"{", 
             RowBox[{"1", ",", "100"}], "}"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"RandomReal", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", "10"}], ",", "10"}], "}"}], "]"}], ",", 
             RowBox[{"RandomReal", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", "10"}], ",", "10"}], "}"}], "]"}], ",", 
             RowBox[{"RandomReal", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", "10"}], ",", "10"}], "}"}], "]"}]}], "}"}], ",", 
           
           RowBox[{"{", 
            RowBox[{
             RowBox[{"RandomReal", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", "10"}], ",", "10"}], "}"}], "]"}], ",", 
             RowBox[{"RandomReal", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", "10"}], ",", "10"}], "}"}], "]"}], ",", 
             RowBox[{"RandomReal", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", "10"}], ",", "10"}], "}"}], "]"}]}], "}"}]}], 
          "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", "j"}], "}"}]}], "]"}], ",", "1"}], 
      "]"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"j", ",", "2", ",", "50"}], "}"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.891601146925129*^9, 3.891601146928844*^9}, {
   3.891601602177498*^9, 3.891601609601215*^9}, {3.89160165683372*^9, 
   3.8916016694440813`*^9}, {3.89160170824249*^9, 3.89160171281194*^9}, {
   3.891601766127489*^9, 3.8916017743344593`*^9}, {3.891601854392921*^9, 
   3.891601925208548*^9}, {3.891601976750198*^9, 3.891601981069058*^9}, 
   3.8916021949057417`*^9, {3.891602326800169*^9, 3.891602416550994*^9}, 
   3.8916024669998283`*^9, {3.891602503942984*^9, 3.891602508230101*^9}, 
   3.8916026724019833`*^9, {3.891602777771948*^9, 3.8916027964581547`*^9}, {
   3.8916028470293016`*^9, 3.891602911694376*^9}, {3.891602995204546*^9, 
   3.8916030005396214`*^9}, {3.891603080770974*^9, 3.89160308171437*^9}, {
   3.891603461201171*^9, 3.891603466455924*^9}, {3.8916035065048637`*^9, 
   3.891603511223289*^9}, {3.891604067580429*^9, 3.891604079505018*^9}, {
   3.891604114329884*^9, 3.8916041175851927`*^9}},
 CellLabel->
  "In[119]:=",ExpressionUUID->"51adf2c6-c3fa-4dde-b3e1-971f43b827c9"],

Cell[BoxData[
 DynamicModuleBox[{Progress`ProgressDump`forceRedraw$$ = {{}, {}}, 
  Progress`ProgressDump`open$$ = True, Progress`ProgressDump`clock$$ = 1908., 
  Progress`ProgressDump`maxTime$$ = DirectedInfinity[1]}, 
  OverlayBox[{
   AnimatorBox[Dynamic[Progress`ProgressDump`clock$$], {2., 
     DirectedInfinity[1], 1.},
    AnimationRate->1,
    AnimationRunTime->1906.386360168457,
    AnimationTimeIndex->1906.386360168457,
    AppearanceElements->None,
    ImageSize->{1, 1}], 
   DynamicWrapperBox[
    DynamicBox[ToBoxes[
      Progress`GenerateProgressPanel[{
       "Progress" :> (Parallel`Combine`Private`nreceived + 
          Min[2, 6 - Parallel`Combine`Private`nreceived]/2)/6, "Results" :> 
        StringTemplate["`1`/`2` evaluations of `3` items each (`4` kernels)"][
         Parallel`Combine`Private`nreceived, 6, 9, 2], "Times" :> 
        With[{Parallel`Combine`Private`elapsed$ = 
           AbsoluteTime[] - Parallel`Combine`Private`start}, {
          Parallel`Combine`Private`remaining$ = (
             1./((Parallel`Combine`Private`nreceived + 
               Min[2, 6 - Parallel`Combine`Private`nreceived]/2)/6) - 1) 
            Parallel`Combine`Private`elapsed$}, 
          StringTemplate["Elapsed: `1`, remaining: `2`, ETA: `3`"][
           Parallel`Combine`Private`timefmt[
           Parallel`Combine`Private`elapsed$], 
           Parallel`Combine`Private`timefmt[
           Parallel`Combine`Private`remaining$], 
           DateString[
           Parallel`Combine`Private`remaining$ + AbsoluteTime[]]]]}, <|{
        "DelayedTask" -> ScheduledTaskObject[13, 
           HoldForm[AppendTo[Progress`ProgressDump`this$state$6940297, 
              Progress`ProgressDump`CreateProgressState[
              Progress`ProgressDump`parameters$6940297, 
               Progress`ProgressDump`info$6940297, ProgressReporting -> 
               Automatic, "Title" -> "ParallelTable", UpdateInterval -> 1, 
               "ConsoleSupport" -> False, "TimeEstimate" -> None]]; 
            Progress`ProgressDump`ProgressInit[
             Progress`ProgressDump`this$state$6940297]; Null], {2, 1}, 
           Automatic, True, "AutoRemove" -> False, "EpilogFunction" :> Null, 
           "TaskGroup" -> "Global`"], "State" :> 
         Progress`ProgressDump`this$state$6940297, "Title" -> "ParallelTable",
          "Type" -> "Grid", "Environment" -> "Notebook", 
         "Parameters" -> {
          "Progress" :> (Parallel`Combine`Private`nreceived + 
             Min[2, 6 - Parallel`Combine`Private`nreceived]/2)/6, "Results" :> 
           StringTemplate[
            "`1`/`2` evaluations of `3` items each (`4` kernels)"][
            Parallel`Combine`Private`nreceived, 6, 9, 2], "Times" :> 
           With[{Parallel`Combine`Private`elapsed$ = 
              AbsoluteTime[] - Parallel`Combine`Private`start}, {
             Parallel`Combine`Private`remaining$ = (
                1./((Parallel`Combine`Private`nreceived + 
                  Min[2, 6 - Parallel`Combine`Private`nreceived]/2)/6) - 1) 
               Parallel`Combine`Private`elapsed$}, 
             StringTemplate["Elapsed: `1`, remaining: `2`, ETA: `3`"][
              Parallel`Combine`Private`timefmt[
              Parallel`Combine`Private`elapsed$], 
              Parallel`Combine`Private`timefmt[
              Parallel`Combine`Private`remaining$], 
              DateString[
              Parallel`Combine`Private`remaining$ + AbsoluteTime[]]]]}, 
         "PreemptibleQ" -> True, "ConsoleQ" -> False, "Evaluator" -> "Local", 
         "EvaluationCell" -> CellObject[121937], "TimeStart" -> 
         3.891582518036253`16.342701232925304*^9, "TimeStartLocal" -> 
         3.891582518036253`16.342701232925304*^9, "InitialTimeEstimate" -> 
         Indeterminate, "UpdateInterval" -> 1, "OuterUpdateInterval" -> 1, 
         "Buttons" -> None, "Optional" -> {}, "ContainerQ" -> False, 
         "CreateContainerQ" -> False, "CurrentContainer" -> None, 
         "PreviousContainer" -> None, "ContainerName" -> None, "Cell" -> 
         Hold[Progress`ProgressDump`cell$6940307], "Clock" :> 
         Dynamic[Progress`ProgressDump`clock$$], "Redraw" -> 
         Progress`ProgressDump`forceRedraw$$, "Open" :> 
         Dynamic[Progress`ProgressDump`open$$]}|>], StandardForm],
     ImageSizeCache->{439., {44., 51.}},
     TrackedSymbols:>{Progress`ProgressDump`forceRedraw$$}], Refresh[
    Progress`ProgressDump`forceRedraw$$ = 
     With[{Progress`ProgressDump`values = Quiet[
          
          Values[{"Progress" :> (Parallel`Combine`Private`nreceived + 
              Min[2, 6 - Parallel`Combine`Private`nreceived]/2)/6, "Results" :> 
            StringTemplate[
             "`1`/`2` evaluations of `3` items each (`4` kernels)"][
             Parallel`Combine`Private`nreceived, 6, 9, 2], "Times" :> 
            With[{Parallel`Combine`Private`elapsed$ = 
               AbsoluteTime[] - Parallel`Combine`Private`start}, {
              Parallel`Combine`Private`remaining$ = (
                 1./((Parallel`Combine`Private`nreceived + 
                   Min[2, 6 - Parallel`Combine`Private`nreceived]/2)/6) - 1) 
                Parallel`Combine`Private`elapsed$}, 
              StringTemplate["Elapsed: `1`, remaining: `2`, ETA: `3`"][
               Parallel`Combine`Private`timefmt[
               Parallel`Combine`Private`elapsed$], 
               Parallel`Combine`Private`timefmt[
               Parallel`Combine`Private`remaining$], 
               DateString[
               Parallel`Combine`Private`remaining$ + AbsoluteTime[]]]]}]]}, 
       Map[
       Position[Progress`ProgressDump`values, #, Infinity]& , {
        None, Automatic}]], UpdateInterval -> 
     Lookup[<|"DelayedTask" -> ScheduledTaskObject[13, 
          HoldForm[AppendTo[Progress`ProgressDump`this$state$6940297, 
             Progress`ProgressDump`CreateProgressState[
             Progress`ProgressDump`parameters$6940297, 
              Progress`ProgressDump`info$6940297, ProgressReporting -> 
              Automatic, "Title" -> "ParallelTable", UpdateInterval -> 1, 
              "ConsoleSupport" -> False, "TimeEstimate" -> None]]; 
           Progress`ProgressDump`ProgressInit[
            Progress`ProgressDump`this$state$6940297]; Null], {2, 1}, 
          Automatic, True, "AutoRemove" -> False, "EpilogFunction" :> Null, 
          "TaskGroup" -> "Global`"], "State" :> 
        Progress`ProgressDump`this$state$6940297, "Title" -> "ParallelTable", 
        "Type" -> "Grid", "Environment" -> "Notebook", 
        "Parameters" -> {
         "Progress" :> (Parallel`Combine`Private`nreceived + 
            Min[2, 6 - Parallel`Combine`Private`nreceived]/2)/6, "Results" :> 
          StringTemplate[
           "`1`/`2` evaluations of `3` items each (`4` kernels)"][
           Parallel`Combine`Private`nreceived, 6, 9, 2], "Times" :> 
          With[{Parallel`Combine`Private`elapsed$ = 
             AbsoluteTime[] - Parallel`Combine`Private`start}, {
            Parallel`Combine`Private`remaining$ = (
               1./((Parallel`Combine`Private`nreceived + 
                 Min[2, 6 - Parallel`Combine`Private`nreceived]/2)/6) - 1) 
              Parallel`Combine`Private`elapsed$}, 
            StringTemplate["Elapsed: `1`, remaining: `2`, ETA: `3`"][
             Parallel`Combine`Private`timefmt[
             Parallel`Combine`Private`elapsed$], 
             Parallel`Combine`Private`timefmt[
             Parallel`Combine`Private`remaining$], 
             DateString[
             Parallel`Combine`Private`remaining$ + AbsoluteTime[]]]]}, 
        "PreemptibleQ" -> True, "ConsoleQ" -> False, "Evaluator" -> "Local", 
        "EvaluationCell" -> CellObject[121937], "TimeStart" -> 
        3.891582518036253`16.342701232925304*^9, "TimeStartLocal" -> 
        3.891582518036253`16.342701232925304*^9, "InitialTimeEstimate" -> 
        Indeterminate, "UpdateInterval" -> 1, "OuterUpdateInterval" -> 1, 
        "Buttons" -> None, "Optional" -> {}, "ContainerQ" -> False, 
        "CreateContainerQ" -> False, "CurrentContainer" -> None, 
        "PreviousContainer" -> None, "ContainerName" -> None, "Cell" -> 
        Hold[Progress`ProgressDump`cell$6940307], "Clock" -> Dynamic[None]|>, 
       "OuterUpdateInterval"], TrackedSymbols :> {}],
    ImageSizeCache->{439., {44., 51.}}]}, All, 2],
  DynamicModuleValues:>{}]], "PrintTemporary",
 ShowCellLabel->True,
 CellChangeTimes->{3.89160412005471*^9},
 CellLabel->
  "During evaluation of \
In[119]:=",ExpressionUUID->"430ac021-dd1b-42b9-96b5-52bf74d1264c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"data", "[", 
      RowBox[{"[", "j", "]"}], "]"}], "[", 
     RowBox[{"[", "1", "]"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"j", ",", "1", ",", 
      RowBox[{"Length", "[", "data", "]"}]}], "}"}]}], "]"}], "]"}]], "Input",\

 CellChangeTimes->{{3.8916028025388193`*^9, 3.891602804201446*^9}, {
  3.891602934893834*^9, 3.891602971202997*^9}, {3.891603002699597*^9, 
  3.891603049916329*^9}},
 CellLabel->
  "In[118]:=",ExpressionUUID->"7c90279c-1322-4819-ba93-22c461fe8fd4"],

Cell[BoxData[
 GraphicsBox[{{}, 
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`], 
    AbsoluteThickness[1.6], 
    StyleBox[
     PointBox[{{1., 1.425108}, {2., 0.014623}, {3., 0.178386}, {4., 
      1.459618}, {5., 0.080421}, {6., 0.123712}, {7., 0.193138}, {8., 
      0.290562}, {9., 0.39408}}],
     FontFamily->"Arial"]}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0},
  BaseStyle->{FontFamily -> "Arial"},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 9}, {0, 1.459618}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.891602804576231*^9, {3.891602931801149*^9, 3.8916029715601*^9}, {
   3.891603017136819*^9, 3.891603051238151*^9}, 3.891603492510687*^9, 
   3.891603807554915*^9, 3.8916040971696177`*^9},
 CellLabel->
  "Out[118]=",ExpressionUUID->"ccb11fe7-ec0f-4e31-8da8-32373e9355dc"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "interpolation", "]"}], "\[IndentingNewLine]", 
 RowBox[{"interpolation", " ", "=", " ", "\[IndentingNewLine]", 
  RowBox[{"ListInterpolation", "[", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"data", "[", 
       RowBox[{"[", "j", "]"}], "]"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "1", ",", 
       RowBox[{"Length", "[", "data", "]"}]}], "}"}]}], "]"}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.8916038513302526`*^9, 3.891603891321155*^9}},
 CellLabel->
  "In[111]:=",ExpressionUUID->"924dae34-2a95-4a57-b93f-e2bed3185a71"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["InterpolatingFunction",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{{{{}, {}, 
                TagBox[{
                  Directive[
                   Opacity[1.], 
                   RGBColor[0.368417, 0.506779, 0.709798], 
                   AbsoluteThickness[1]], 
                  LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAA1fKkaAAA8D8+om7BfuasPwRrNNHB
//U/Crt/UIgmtz+tYewpsYD8P29V/QbSob8/24+gtKVJAUAc/f49bdbDP2hG
23OzQwRAuJOgpj1QyD8yPCorWH4HQKEUSObZS84/rJXHVdKBCkDMN8mbLQXT
P2MueXjjxQ1A3NQ1OXAV2D9Sj12dWn0QQJnMbrdz0d0/SrklOC78EUD4oly/
DOHhP+EC+E5NmxNA5jAXRgUg5T9PfnEf1x4VQLhIzG66quc/giWzP8GaFkBK
J+M0GgLqP1Ts/tv2NhhAPe/1apbO7D/95PExl7cZQGI6BUuUAfA/Rf3uA4NY
G0CcF7F6NwXyP1JBtCXP8RxAgiNZBacs9D82tyABhm8eQPMmDI2zh/Y/XaZL
LMQGIECW8pYZDdP5PwqK2rT6xyBAe0VUiQ6a/T+HfW77VpkhQAJjG+YdqgFA
5obmaeNmIkCLCl7/GrcGQDEpMjWlJiNA5td0DQPFDEBL24K+jPYjQGYtkqal
5RBAUSanpKm4JEBKMFLgccAPQDmHr7L2diVA085DckxcDEDx97x+aUUmQC4B
BaV21wpAlQGepxEGJ0A0lvyckI4NQAgbhI7f1idAyx51yoDeEEBdSk6d3aMo
QGqqtWCThxJAnhLsCBFjKUB90UgLJBcUQK7qjjJqMipA7F5+I1U4FkCqWwW5
+PMqQLiptv5+3xhAieJfZ7exK0Bl86dxYK0bQDd5v9ObfyxASnskavyuHkDR
qPKctT8tQJTyKLaKriBAOugqJPUPLkBq2tajHgYiQI/ANghq0i5AUb0hb/zy
IkDGriYUD5EvQNdSqgKS9CNAZ9YN7+wvMEAd+F75WqElQOEhcgJtkDBAzM0x
2/HDJ0BC9dj0//gwQCi2T8saHypAldMx+6pfMUD7usGnj90rQF5+9K9wvzFA
wGq5G3VLLUAOsblDSScyQOCML9MKSC5ANLDohTyIMkBhALji4eYuQEu6CdxH
5zJA0XwMkAB2MEBKTC0RZk4zQErwbMISazRAv6q69J6uM0D1AD8cGQw5QByR
SrfqFjRAkCoPIBWkPEBqgsyNTn00QIHWGagZrzxALkC4Es3cNEBoD+bImeU7
QNmFpnZeRDVAQkS18x1VO0D6l/6ICqU1QE6ioZIKaDtAAzJZeskNNkCjHoZ+
4m88QP3WpX+gdDZAgyEZFXA6P0BtSFwzktQ2QLZ56JQCLUFAxUEVxpY8N0Bu
h1TFmedCQJMHOAe2nTdA03i3xxZTREDTsHX5//83QMSSDbovWEVAjIyqyA==

                   "]]}, 
                 Annotation[#, "Charting`Private`Tag$6939282#1"]& ]}}, {}}, {
             DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
              AxesOrigin -> {0, 0}, FrameTicks -> {{{}, {}}, {{}, {}}}, 
              GridLines -> {None, None}, DisplayFunction -> Identity, 
              PlotRangePadding -> {{
                 Scaled[0.1], 
                 Scaled[0.1]}, {
                 Scaled[0.1], 
                 Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
              All, DisplayFunction -> Identity, AspectRatio -> 1, 
              Axes -> {False, False}, AxesLabel -> {None, None}, 
              AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
              Frame -> {{True, True}, {True, True}}, 
              FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
              Directive[
                Opacity[0.5], 
                Thickness[Tiny], 
                RGBColor[0.368417, 0.506779, 0.709798]], 
              FrameTicks -> {{None, None}, {None, None}}, 
              GridLines -> {None, None}, GridLinesStyle -> Directive[
                GrayLevel[0.5, 0.4]], ImageSize -> 
              Dynamic[{
                Automatic, 
                 3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification])}], 
              Method -> {
               "DefaultBoundaryStyle" -> Automatic, 
                "DefaultGraphicsInteraction" -> {
                 "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                  "Effects" -> {
                   "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                "DefaultMeshStyle" -> AbsolutePointSize[6], 
                "ScalingFunctions" -> None, 
                "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
              PlotRange -> {{1., 24.}, {0., 42.68895650542029}}, 
              PlotRangeClipping -> True, PlotRangePadding -> {{
                 Scaled[0.1], 
                 Scaled[0.1]}, {
                 Scaled[0.1], 
                 Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"1.`", ",", "24.`"}], "}"}], "}"}], 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"scalar\"", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{{{{}, {}, 
                TagBox[{
                  Directive[
                   Opacity[1.], 
                   RGBColor[0.368417, 0.506779, 0.709798], 
                   AbsoluteThickness[1]], 
                  LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAA1fKkaAAA8D8+om7BfuasPwRrNNHB
//U/Crt/UIgmtz+tYewpsYD8P29V/QbSob8/24+gtKVJAUAc/f49bdbDP2hG
23OzQwRAuJOgpj1QyD8yPCorWH4HQKEUSObZS84/rJXHVdKBCkDMN8mbLQXT
P2MueXjjxQ1A3NQ1OXAV2D9Sj12dWn0QQJnMbrdz0d0/SrklOC78EUD4oly/
DOHhP+EC+E5NmxNA5jAXRgUg5T9PfnEf1x4VQLhIzG66quc/giWzP8GaFkBK
J+M0GgLqP1Ts/tv2NhhAPe/1apbO7D/95PExl7cZQGI6BUuUAfA/Rf3uA4NY
G0CcF7F6NwXyP1JBtCXP8RxAgiNZBacs9D82tyABhm8eQPMmDI2zh/Y/XaZL
LMQGIECW8pYZDdP5PwqK2rT6xyBAe0VUiQ6a/T+HfW77VpkhQAJjG+YdqgFA
5obmaeNmIkCLCl7/GrcGQDEpMjWlJiNA5td0DQPFDEBL24K+jPYjQGYtkqal
5RBAUSanpKm4JEBKMFLgccAPQDmHr7L2diVA085DckxcDEDx97x+aUUmQC4B
BaV21wpAlQGepxEGJ0A0lvyckI4NQAgbhI7f1idAyx51yoDeEEBdSk6d3aMo
QGqqtWCThxJAnhLsCBFjKUB90UgLJBcUQK7qjjJqMipA7F5+I1U4FkCqWwW5
+PMqQLiptv5+3xhAieJfZ7exK0Bl86dxYK0bQDd5v9ObfyxASnskavyuHkDR
qPKctT8tQJTyKLaKriBAOugqJPUPLkBq2tajHgYiQI/ANghq0i5AUb0hb/zy
IkDGriYUD5EvQNdSqgKS9CNAZ9YN7+wvMEAd+F75WqElQOEhcgJtkDBAzM0x
2/HDJ0BC9dj0//gwQCi2T8saHypAldMx+6pfMUD7usGnj90rQF5+9K9wvzFA
wGq5G3VLLUAOsblDSScyQOCML9MKSC5ANLDohTyIMkBhALji4eYuQEu6CdxH
5zJA0XwMkAB2MEBKTC0RZk4zQErwbMISazRAv6q69J6uM0D1AD8cGQw5QByR
SrfqFjRAkCoPIBWkPEBqgsyNTn00QIHWGagZrzxALkC4Es3cNEBoD+bImeU7
QNmFpnZeRDVAQkS18x1VO0D6l/6ICqU1QE6ioZIKaDtAAzJZeskNNkCjHoZ+
4m88QP3WpX+gdDZAgyEZFXA6P0BtSFwzktQ2QLZ56JQCLUFAxUEVxpY8N0Bu
h1TFmedCQJMHOAe2nTdA03i3xxZTREDTsHX5//83QMSSDbovWEVAjIyqyA==

                   "]]}, 
                 Annotation[#, "Charting`Private`Tag$6939282#1"]& ]}}, {}}, {
             DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
              AxesOrigin -> {0, 0}, FrameTicks -> {{{}, {}}, {{}, {}}}, 
              GridLines -> {None, None}, DisplayFunction -> Identity, 
              PlotRangePadding -> {{
                 Scaled[0.1], 
                 Scaled[0.1]}, {
                 Scaled[0.1], 
                 Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
              All, DisplayFunction -> Identity, AspectRatio -> 1, 
              Axes -> {False, False}, AxesLabel -> {None, None}, 
              AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
              Frame -> {{True, True}, {True, True}}, 
              FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
              Directive[
                Opacity[0.5], 
                Thickness[Tiny], 
                RGBColor[0.368417, 0.506779, 0.709798]], 
              FrameTicks -> {{None, None}, {None, None}}, 
              GridLines -> {None, None}, GridLinesStyle -> Directive[
                GrayLevel[0.5, 0.4]], ImageSize -> 
              Dynamic[{
                Automatic, 
                 3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification])}], 
              Method -> {
               "DefaultBoundaryStyle" -> Automatic, 
                "DefaultGraphicsInteraction" -> {
                 "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                  "Effects" -> {
                   "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                "DefaultMeshStyle" -> AbsolutePointSize[6], 
                "ScalingFunctions" -> None, 
                "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
              PlotRange -> {{1., 24.}, {0., 42.68895650542029}}, 
              PlotRangeClipping -> True, PlotRangePadding -> {{
                 Scaled[0.1], 
                 Scaled[0.1]}, {
                 Scaled[0.1], 
                 Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"1.`", ",", "24.`"}], "}"}], "}"}], 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"scalar\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["3", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Hermite\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["False", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  InterpolatingFunction[{{1., 24.}}, {
   5, 7, 0, {24}, {4}, 0, 0, 0, 0, Automatic, {}, {}, False}, {{1., 2., 3., 
   4., 5., 6., 7., 8., 9., 10., 11., 12., 13., 14., 15., 16., 17., 18., 19., 
   20., 21., 22., 23., 24.}}, {
   Developer`PackedArrayForm, {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 
    14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24}, {0.056446, 0.141348, 
    0.245137, 0.436591, 0.684159, 0.887038, 1.182455, 1.606999, 2.434071, 
    4.244143, 3.287472, 4.328093, 5.396208, 7.213522, 8.973161, 10.331126, 
    13.1367, 15.100533, 16.901117, 28.418491, 27.552678, 28.133485, 35.815057,
     42.688958}}, {Automatic}],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.891603867113405*^9, 3.891603891996687*^9}},
 CellLabel->
  "Out[112]=",ExpressionUUID->"1b588a0f-d292-4ceb-a765-07e9e88e255f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", " ", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"interpolation", "[", "x", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "1", ",", 
       RowBox[{"Length", "[", "data", "]"}]}], "}"}]}], "]"}], " ", ",", " ", 
   
   RowBox[{"ListPlot", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"data", "[", 
        RowBox[{"[", "j", "]"}], "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"j", ",", "1", ",", 
        RowBox[{"Length", "[", "data", "]"}]}], "}"}]}], "]"}], "]"}]}], " ", 
  "]"}]], "Input",
 CellChangeTimes->{{3.891603905594054*^9, 3.891603966819415*^9}},
 CellLabel->
  "In[115]:=",ExpressionUUID->"6334c2e9-5b20-4fad-b263-9032f6827eb1"],

Cell[BoxData[
 GraphicsBox[{{{{}, {}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1:eJwVV3k8VO8Xtu/LJHuUMWNnzIwZQzPcJ0sRSRRStlIpEeqLipJKSJIobaJF
oqhUtCkSKVuFtCsqabMv2X7398/M5/nce897luec57zUNVs81okICQl9Jn/+
/1+uLLRLSKiP0HpVJLb72xXikR6L9VWrj1A9XZHuuuAq8cxyTXe9dR+x45jF
qbpTV4n3PjWLj27tIwrq/8bWLy0hRM4kq+l/7yPaW0aHlW6WEkv0Zl13aeon
PjVOcax514kurm73sdODhOnog1DJjjJC0dthsZn1KLHrd7uv/LMKwmqMP90t
P0MI7fJUMo6tIpSnN8fQTWaIkD4e4XWwiugXze1b6zRDJCU0jyXnVhFFikJd
XxJniAFr9g+RJ1XEHIOaus7RGaLtRXyem1I1MWNc4PQnQgjuOT+jt5VUE19W
MpR6fYUxdXQWK+rPY6Kw3PbiZ4Yoar9KLh7PqSUGNn7v59mIosJ89byZklrC
RivDNt1FFAMXGSbqT2qJlwmfX88PEcWNgelr+/priSnnfTJZ+eRzeZrQEpc6
wuN9/ZaFymIIXGokWifylJgSWjG/eFwMn7VLlj1OrCecyqaShKXEEWkXRc88
VU9krit45a0qDoct/L07btYThs9GN4tZiEPw4FBpzrd6wuPoybN+m8XRaSzl
RnF9RhTqdYpRPolj2l1sXF3rOeGxOLR5W40EInpO3B940UD4ru1iibRK4Eyb
Yk5lXwOxJm5V1uEuCXT/WDBZqthIbC1xWVkkIok/RkeDxNwaiSwl065PkAQv
ZuTGjoZG4vXbXyOLH0ii8xFNur2liVgdGj6XelsKYe+kB65ntRDB+74llDyR
gvsDpz+3CluIzWf8u/htUlA2o69put9CxDe7FXoNSaFbeuV/gq8tRK6FOTuN
LY1h4RVFsrwXROfEX8fREmlkW4Z4bvz4gliXFhnWeEkGNZLpT+/wXxGa1pra
y27L4G7qu0ul7q+Ipq/VDa01MpBYpVd5a90rwpJQNn3/WQZbeZEBA4dfERID
t3t758hC33gBzfTrK6LQe3KDVIYsnFzidI9nthK9ugfW2MfKwWgeO3tkrI2I
uHPa+46TAiRorH+8/g5i4FmL7605s7DWv8sqd14ncY/+RrZTejY0Qh+IbJ7p
IoSGBte0titjz6lnIrPnfyfGT05sLX6minS1rBMq7r3EJtGOkeEXqjg7b5WF
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
        "]]},
      Annotation[#, "Charting`Private`Tag$6939457#1"]& ]}, {}}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], 
     StyleBox[PointBox[CompressedData["
1:eJxTTMoPSmViYGCQAGIQDQEf7BMf/yqvfbbGHirg8Lxg7bcN4oegfA4HLgFW
42UJ56F8AYfGaesSpD/ehvJFHMyKPbIWPnkK5Us4xDzlbJmb9AbKl3F4c1f+
fejrT1C+gkOFW/RUl20/oXwlh5tKmea/KpgdIHwVh3KDpPkMvwSgfDUHPYUt
cvt8uKB8DYel+i1zvvsLQvlaDnXLT/ZsnyoK5es4fH5+u2npLRkoX8/Btmam
htMnRSjfwOHl1psRnStVoHxDh687b3X9ddWC8o0cMsO28Vca60H5xg4L7vXM
Wv/MAMo3cZi9+pmlUrYNlG/q8Mdc36+m1xrKN3NY17hWSEcJJm/uILth9cng
F45QvoXDMo3px/QjXB0AILxnMA==
       "]],
      FontFamily->"Arial"]}, {{}, {}}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{1.0000000000000022`, 0},
  BaseStyle->{FontFamily -> "Arial"},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{1, 24}, {0., 42.688956200403865`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.891603967455894*^9},
 CellLabel->
  "Out[115]=",ExpressionUUID->"c7c5e649-972f-4d5a-ab17-c0e3a1779c3b"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ParametricPlot3D", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{
     RowBox[{"data", "[", 
      RowBox[{"[", "2", "]"}], "]"}], "[", 
     RowBox[{"All", ",", "\"\<Position\>\"", ",", "t"}], "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.891601860872707*^9, 3.891601891519916*^9}, {
  3.891602200633108*^9, 3.8916022017605467`*^9}, {3.89160278645854*^9, 
  3.891602812332202*^9}},
 CellLabel->"In[87]:=",ExpressionUUID->"c4d9acbc-f7e2-4797-90af-9045058d82dd"],

Cell[BoxData[
 Graphics3DBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[2], 
      Line3DBox[CompressedData["
1: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
       "]]},
     Annotation[#, "Charting`Private`Tag$4015493#1"]& ], 
    TagBox[
     {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[2], 
      Line3DBox[CompressedData["
1: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
       "]]},
     Annotation[#, "Charting`Private`Tag$4015493#2"]& ], 
    TagBox[
     {RGBColor[0.560181, 0.691569, 0.194885], AbsoluteThickness[2], 
      Line3DBox[CompressedData["
1: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
jWGQpXS9e1M3Af8HSi5lfw==
       "]]},
     Annotation[#, "Charting`Private`Tag$4015493#3"]& ], 
    TagBox[
     {RGBColor[0.922526, 0.385626, 0.209179], AbsoluteThickness[2], 
      Line3DBox[CompressedData["
1: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
OtHN9sdg3caJsXOUzymod3qOkfAvsDteUA==
       "]]},
     Annotation[#, "Charting`Private`Tag$4015493#4"]& ], 
    TagBox[
     {RGBColor[0.528488, 0.470624, 0.701351], AbsoluteThickness[2], 
      Line3DBox[CompressedData["
1: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
X+iIT9btdLfhWej8/xeSQZg=
       "]]},
     Annotation[#, "Charting`Private`Tag$4015493#5"]& ]}, {}},
  Axes->True,
  BaseStyle->{FontFamily -> "Arial"},
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  ImagePadding->Automatic,
  ImageSize->{370.7539626089036, 398.99778241665183`},
  ImageSizeRaw->Automatic,
  Method->{
   "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}},
  PlotRange->{{-9.393966212458565, 13.61902494224112}, {-16.48228149182419, 
   13.749372618572723`}, {-13.457754614068541`, 0.}},
  PlotRangePadding->{{
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{1.8381921281651323`, 1.72272253067742, -2.259043333415303},
  ViewVertical->{0.15641531430958358`, 
   0.3515648720703267, -0.9230040033367185}]], "Output",
 CellChangeTimes->{
  3.891601625558136*^9, 3.891601674317277*^9, {3.8916017706196003`*^9, 
   3.891601777309016*^9}, {3.89160184451014*^9, 3.891601892062108*^9}, 
   3.891601944058116*^9, 3.8916022022045383`*^9, 3.8916024759325657`*^9, {
   3.8916027870991077`*^9, 3.8916028129496403`*^9}},
 CellLabel->"Out[87]=",ExpressionUUID->"caf4dac1-681e-4553-8a6b-ca29e3c4ec34"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{"Map", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"data", "[", 
        RowBox[{"#", ",", "t"}], "]"}], "&"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "\"\<TotalKineticEnergy\>\"", ",", 
        "\"\<TotalPairwiseInteractionEnergy\>\"", ",", 
        "\"\<TotalEnergy\>\""}], "}"}]}], "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"PlotRange", "->", "All"}]}], "]"}]], "Input",
 CellLabel->"In[67]:=",ExpressionUUID->"a6dc8386-7d70-475c-86f0-6911dbfcde03"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwVzn841AccB3C/WkqdUNdzGkakH4rUKiqfT6up6azHxYxKJl2FcomnqK1d
D0dKrI5uRVcx+bFIjpX8aLpleVTq+8Pvw7mdX3e+amGqse/+eD/v5/XP+3nb
h0ULDhoZGBj4svm/fQ4OvHo8GOA19d7SLzKVRpOt1qJu3lrgw7hSf57GNXJZ
djlvG0S7cPxFrHc+b7mfw/OH+jK5Mi6FxsDwiZrLvHCY2NKvF0to7HJN3prG
i4XsKO438nM03lywS5LKSwSZc9uSkQQaxablzud5UvghyMW1LZLGb4NulY6+
yYNqjmpUxKfRbFq8d7ttKXgPzgq+7Eajk9/IwJMLCqi0c1uYwKXx5AsPkL17
CF5SU2nEBwoXKixUhoZ1cKpQ1OTZR2GlemvTy031wJ2ULuU2UlgfkbMoSKeE
cwm3tML7FI4t2Wx+92gDBFbm2jrmUGg0WTxvkVMjjKnzjUclFK6bDq3cXdIE
h4VU0XgMhU2Ja188Xf4SRh/0n58bSqFdxvBk4UgziGYc0AGfwuGJbhXl9hrO
VvUojnhSmDf0qJFziQCJW29InTOFHJs7jEZDgk/tnSJLLoUXj1QIbzrSwNlX
nub0CYXjWKw5fLYFnO1CAuLGSIx1Vyq4T1ohOYqIPKIlsbtEeeGVfTugidWq
IprEDxHk9WUJHSCum51Z10Diii0zp4SPOqG2SevvW0Xi9tv2h8oWqiDZrqJj
/a8knrTZ79C7txsEB+miRDmJLroAsxbfHmiR8+n4KyRamY+aKt/3wA6P+33t
EhJN6q6XLs7uhTmbkleePk1i5NpHbbN2qqFsaPWgNJrE4q/CbtaOq8F6dZWV
IJzEsWHredqsPiiPK/zMNZjEit3bjaXbNOAZP+KduYvEszuS5AqtBn73uh0y
x5tE+y6f1tykv8DmH7nedDOJnusTpTx3LWyTmTXI15C41/blpCGhhcH07/a4
rWD3G9PUInE/VNfW3Il0IFFmEhIrcBwAxXrzsCxr9r+q4raRcgCEDs2bvaxI
nPG92N/j+CCURHKWF5iRaFAYUqq2HIK3HvtjRk1IjLlWmmZZPwSZ0cYfzacI
rFmRYmpxbBhmq0O5VRMEWvjEuJzj6ODjRZfF7m8J7FzZTMRX6+C5/Lj0ho7A
ezfAUROih9/mvr7a3E/gvtJ1FjZTehCVMKFn+gj8MemWuLNoBK7V8zM2dBN4
d8DmOofPwDG9uiu/g8CUnKRQ1dcM5GV5tVxlHS7QO5X4MTBtVNiawvrT6up7
voEMtP959+8I1qnpe55eDGNAlZqR6sr68Lqf38yOZyAhKnlTVTuBDonzd8zM
ZyB4ZP4Dqo3AqQ1n5rYUMCBZs6qigXWbvu91fjEDwulTVQ9ZZwSW7/MuY6D/
SkFXDuvp5YITSdUMTKVlSoSsO1+l3zAmGPiEpg5MthL4QDJxgKAYkHUUaoZZ
SzfuX5bbykAK54+jKtY7f1ml+ELFwOVDtOwJ66pTz5+JBxloJlMFl1hnrfw8
3U/HwInYmgVi1sfV2f72DAOVwVt6T7Beyo/qfvyOAaXoy5+CWJsYknkZEww4
djyL47PuqdgYEfqegV2GBWHAujoi19XtXwb8DNSB7qyv2pmNTU8zYDsWH+DE
+j9pc4Ul
       "]]},
     Annotation[#, "Charting`Private`Tag$1479897#1"]& ], {}, 
    TagBox[
     {RGBColor[0.560181, 0.691569, 0.194885], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
       "]]},
     Annotation[#, "Charting`Private`Tag$1479897#3"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 9104.561168265303},
  BaseStyle->{FontFamily -> "Arial"},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.891601646198844*^9, 3.891602223917817*^9},
 CellLabel->"Out[67]=",ExpressionUUID->"4c43c210-517b-4f85-be2c-6b2f10d46a74"]
}, Open  ]]
},
CellGrouping->Manual,
WindowSize->{1259, 731},
WindowMargins->{{10, Automatic}, {Automatic, 0}},
FrontEndVersion->"13.0 for Mac OS X x86 (64-bit) (February 4, 2022)",
StyleDefinitions->FrontEnd`FileName[{"Report"}, "StandardReport.nb", 
  CharacterEncoding -> "UTF-8"],
ExpressionUUID->"06291461-1d3b-4943-820a-c77154d4c93f"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 1422, 19, 97, "Title",ExpressionUUID->"568d6fb6-f317-4779-b36b-ba7a4ea9dbb8",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[2005, 43, 1010, 18, 94, "Author",ExpressionUUID->"a13991f0-0212-4b61-ba2c-cf35fba3e075",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}]
}, Open  ]],
Cell[CellGroupData[{
Cell[3052, 66, 182, 3, 69, "Section",ExpressionUUID->"1fc0ade7-4f3a-41d5-83b1-c094c734a835"],
Cell[CellGroupData[{
Cell[3259, 73, 352, 7, 63, "Input",ExpressionUUID->"d5f2d9c7-c3ef-4a7c-8df1-95e0a2fa4ca5"],
Cell[3614, 82, 276, 6, 43, "Output",ExpressionUUID->"9e12a229-9fe7-48fb-a208-b91541332069"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[3939, 94, 159, 3, 55, "Section",ExpressionUUID->"0683fa81-01c5-485a-a0de-db0eb9f7ffe9"],
Cell[4101, 99, 341, 7, 63, "Input",ExpressionUUID->"f88d26e6-15a4-4c37-9358-35cfab38de19"]
}, Closed]],
Cell[CellGroupData[{
Cell[4479, 111, 187, 3, 55, "Section",ExpressionUUID->"a981279d-dea9-49af-b242-cc8c301309db"],
Cell[CellGroupData[{
Cell[4691, 118, 1729, 44, 84, "Input",ExpressionUUID->"d8f42c9a-3f77-4d87-a4bf-b25675847eff"],
Cell[6423, 164, 7956, 155, 90, "Output",ExpressionUUID->"61836afc-c293-4d7b-b676-faec2b357230"]
}, Open  ]],
Cell[CellGroupData[{
Cell[14416, 324, 418, 9, 41, "Input",ExpressionUUID->"4b509a1f-f731-4d8e-966b-13efde9e5079"],
Cell[14837, 335, 44541, 751, 396, "Output",ExpressionUUID->"2d9ac7c8-eae0-4a79-b3d2-1164b7d44ba4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[59415, 1091, 681, 18, 41, "Input",ExpressionUUID->"1d5c90bd-21d8-48b2-805b-6d9f58830112"],
Cell[60099, 1111, 58254, 977, 239, "Output",ExpressionUUID->"11757a9c-5018-4704-bc01-4f35fc88baad"]
}, Open  ]],
Cell[CellGroupData[{
Cell[118390, 2093, 218, 3, 41, "Input",ExpressionUUID->"3f09f2cb-e045-40e5-8c3c-2a6351115160"],
Cell[118611, 2098, 12632, 386, 242, "Output",ExpressionUUID->"6e166f01-0022-4ea6-8898-7029e420368e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[131280, 2489, 226, 3, 41, "Input",ExpressionUUID->"4c4d4f07-5e2e-41f8-bac3-61c2ddd7fd8b"],
Cell[131509, 2494, 14822, 442, 242, "Output",ExpressionUUID->"f7605d9b-943b-4f33-80f8-408532e31915"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[146380, 2942, 229, 4, 55, "Section",ExpressionUUID->"8338ead2-c2d1-476b-a671-a282ff2e6e46"],
Cell[146612, 2948, 547, 12, 63, "Input",ExpressionUUID->"8d74aaed-b3db-4e05-b88f-d65c6535b4d5"]
}, Closed]],
Cell[CellGroupData[{
Cell[147196, 2965, 186, 3, 55, "Section",ExpressionUUID->"2fa387df-00cf-4d64-a576-8f8f31ced16c"],
Cell[CellGroupData[{
Cell[147407, 2972, 1498, 43, 63, "Input",ExpressionUUID->"131324f5-abf8-4cec-bd2d-58cd9013082b"],
Cell[148908, 3017, 5823, 142, 251, "Output",ExpressionUUID->"7a695e1a-cb00-4438-9e58-e42c757fa225"]
}, Open  ]],
Cell[CellGroupData[{
Cell[154768, 3164, 2872, 64, 105, "Input",ExpressionUUID->"51adf2c6-c3fa-4dde-b3e1-971f43b827c9"],
Cell[157643, 3230, 8536, 150, 116, "PrintTemporary",ExpressionUUID->"430ac021-dd1b-42b9-96b5-52bf74d1264c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[166216, 3385, 586, 16, 41, "Input",ExpressionUUID->"7c90279c-1322-4819-ba93-22c461fe8fd4"],
Cell[166805, 3403, 1646, 45, 253, "Output",ExpressionUUID->"ccb11fe7-ec0f-4e31-8da8-32373e9355dc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[168488, 3453, 654, 16, 84, "Input",ExpressionUUID->"924dae34-2a95-4a57-b93f-e2bed3185a71"],
Cell[169145, 3471, 13874, 279, 68, "Output",ExpressionUUID->"1b588a0f-d292-4ceb-a765-07e9e88e255f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[183056, 3755, 788, 23, 41, "Input",ExpressionUUID->"6334c2e9-5b20-4fad-b263-9032f6827eb1"],
Cell[183847, 3780, 17540, 309, 248, "Output",ExpressionUUID->"c7c5e649-972f-4d5a-ab17-c0e3a1779c3b"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[201436, 4095, 575, 13, 41, "Input",ExpressionUUID->"c4d9acbc-f7e2-4797-90af-9045058d82dd"],
Cell[202014, 4110, 14797, 265, 423, "Output",ExpressionUUID->"caf4dac1-681e-4553-8a6b-ca29e3c4ec34"]
}, Open  ]],
Cell[CellGroupData[{
Cell[216848, 4380, 615, 17, 41, "Input",ExpressionUUID->"a6dc8386-7d70-475c-86f0-6911dbfcde03"],
Cell[217466, 4399, 25781, 444, 237, "Output",ExpressionUUID->"4c43c210-517b-4f85-be2c-6b2f10d46a74"]
}, Open  ]]
}
]
*)

